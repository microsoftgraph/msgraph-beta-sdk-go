package models
import (
    "strings"
    "errors"
)
// Provides operations to manage the deviceManagement singleton.
type WindowsMalwareSeverity int

const (
    UNKNOWN_WINDOWSMALWARESEVERITY WindowsMalwareSeverity = iota
    LOW_WINDOWSMALWARESEVERITY
    MODERATE_WINDOWSMALWARESEVERITY
    HIGH_WINDOWSMALWARESEVERITY
    SEVERE_WINDOWSMALWARESEVERITY
)

func (i WindowsMalwareSeverity) String() string {
    return []string{"UNKNOWN", "LOW", "MODERATE", "HIGH", "SEVERE"}[i]
}
func ParseWindowsMalwareSeverity(v string) (interface{}, error) {
    result := UNKNOWN_WINDOWSMALWARESEVERITY
    switch strings.ToUpper(v) {
        case "UNKNOWN":
            result = UNKNOWN_WINDOWSMALWARESEVERITY
        case "LOW":
            result = LOW_WINDOWSMALWARESEVERITY
        case "MODERATE":
            result = MODERATE_WINDOWSMALWARESEVERITY
        case "HIGH":
            result = HIGH_WINDOWSMALWARESEVERITY
        case "SEVERE":
            result = SEVERE_WINDOWSMALWARESEVERITY
        default:
            return 0, errors.New("Unknown WindowsMalwareSeverity value: " + v)
    }
    return &result, nil
}
func SerializeWindowsMalwareSeverity(values []WindowsMalwareSeverity) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
