// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type SharePointMigrationFinishManifestFileUploadEvent struct {
    SharePointMigrationEvent
}
// NewSharePointMigrationFinishManifestFileUploadEvent instantiates a new SharePointMigrationFinishManifestFileUploadEvent and sets the default values.
func NewSharePointMigrationFinishManifestFileUploadEvent()(*SharePointMigrationFinishManifestFileUploadEvent) {
    m := &SharePointMigrationFinishManifestFileUploadEvent{
        SharePointMigrationEvent: *NewSharePointMigrationEvent(),
    }
    return m
}
// CreateSharePointMigrationFinishManifestFileUploadEventFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateSharePointMigrationFinishManifestFileUploadEventFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewSharePointMigrationFinishManifestFileUploadEvent(), nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *SharePointMigrationFinishManifestFileUploadEvent) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.SharePointMigrationEvent.GetFieldDeserializers()
    res["manifestFileName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetManifestFileName(val)
        }
        return nil
    }
    return res
}
// GetManifestFileName gets the manifestFileName property value. The exported manifest file name. Read-only.
// returns a *string when successful
func (m *SharePointMigrationFinishManifestFileUploadEvent) GetManifestFileName()(*string) {
    val, err := m.GetBackingStore().Get("manifestFileName")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// Serialize serializes information the current object
func (m *SharePointMigrationFinishManifestFileUploadEvent) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.SharePointMigrationEvent.Serialize(writer)
    if err != nil {
        return err
    }
    {
        err = writer.WriteStringValue("manifestFileName", m.GetManifestFileName())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetManifestFileName sets the manifestFileName property value. The exported manifest file name. Read-only.
func (m *SharePointMigrationFinishManifestFileUploadEvent) SetManifestFileName(value *string)() {
    err := m.GetBackingStore().Set("manifestFileName", value)
    if err != nil {
        panic(err)
    }
}
type SharePointMigrationFinishManifestFileUploadEventable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    SharePointMigrationEventable
    GetManifestFileName()(*string)
    SetManifestFileName(value *string)()
}
