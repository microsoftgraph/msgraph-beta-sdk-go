// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type CloudPcCloudApp struct {
    Entity
}
// NewCloudPcCloudApp instantiates a new CloudPcCloudApp and sets the default values.
func NewCloudPcCloudApp()(*CloudPcCloudApp) {
    m := &CloudPcCloudApp{
        Entity: *NewEntity(),
    }
    return m
}
// CreateCloudPcCloudAppFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateCloudPcCloudAppFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewCloudPcCloudApp(), nil
}
// GetActionFailedErrorCode gets the actionFailedErrorCode property value. The error code if publishing, unpublishing, or resetting a cloud app fails. Possible values are: cloudAppQuotaExceeded, cloudPcLicenseNotFound, internalServerError, appDiscoveryFailed, unknownFutureValue. The default value is null. Supports $filter, $select, $orderBy. Read-only.
// returns a *CloudPcCloudAppActionFailedErrorCode when successful
func (m *CloudPcCloudApp) GetActionFailedErrorCode()(*CloudPcCloudAppActionFailedErrorCode) {
    val, err := m.GetBackingStore().Get("actionFailedErrorCode")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*CloudPcCloudAppActionFailedErrorCode)
    }
    return nil
}
// GetActionFailedErrorMessage gets the actionFailedErrorMessage property value. The error message when the IT admin failed to publish, unpublish, update, or reset a cloud app. For example: 'Publish failed because it exceeds the 500 cloud apps limitation under the policy. You need to unpublish some cloud apps under this policy in order to publish this cloud app again.' Read-only.
// returns a *string when successful
func (m *CloudPcCloudApp) GetActionFailedErrorMessage()(*string) {
    val, err := m.GetBackingStore().Get("actionFailedErrorMessage")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetAddedDateTime gets the addedDateTime property value. The date and time when the cloud app was added to this tenant and became visible in the admin portal. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. An IT admin can't set or modify it. Supports $filter, $select, and $orderBy. Read-only.
// returns a *Time when successful
func (m *CloudPcCloudApp) GetAddedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    val, err := m.GetBackingStore().Get("addedDateTime")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    }
    return nil
}
// GetAppDetail gets the appDetail property value. The appDetail property
// returns a CloudPcCloudAppDetailable when successful
func (m *CloudPcCloudApp) GetAppDetail()(CloudPcCloudAppDetailable) {
    val, err := m.GetBackingStore().Get("appDetail")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(CloudPcCloudAppDetailable)
    }
    return nil
}
// GetAppStatus gets the appStatus property value. The appStatus property
// returns a *CloudPcCloudAppStatus when successful
func (m *CloudPcCloudApp) GetAppStatus()(*CloudPcCloudAppStatus) {
    val, err := m.GetBackingStore().Get("appStatus")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*CloudPcCloudAppStatus)
    }
    return nil
}
// GetAvailableToUser gets the availableToUser property value. Indicates whether this cloud app is available to end users through the end-user portal or the Windows App. The default value is false. It changes to true if the cloud app is successfully published, and reverts to false when the admin unpublishes the cloud app. Supports $filter, $select, and $orderBy.
// returns a *bool when successful
func (m *CloudPcCloudApp) GetAvailableToUser()(*bool) {
    val, err := m.GetBackingStore().Get("availableToUser")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetDescription gets the description property value. The description associated with the cloud app. The maximum allowed length for this property is 512 characters. Supports $filter, $select, and $orderBy.
// returns a *string when successful
func (m *CloudPcCloudApp) GetDescription()(*string) {
    val, err := m.GetBackingStore().Get("description")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetDiscoveredAppName gets the discoveredAppName property value. Name of the discovered app associated with the cloud app. For example, Paint, Supports $filter, $select, and $orderBy. Read-only.
// returns a *string when successful
func (m *CloudPcCloudApp) GetDiscoveredAppName()(*string) {
    val, err := m.GetBackingStore().Get("discoveredAppName")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetDisplayName gets the displayName property value. The display name for the cloud app. The display name for the cloud app, which appears on the end-user portal and must be unique within a single provisioning policy. It uses the discovered app name as the default value. The maximum allowed length for this property is 64 characters. For example, Paint. Supports $filter, $select, and $orderBy.
// returns a *string when successful
func (m *CloudPcCloudApp) GetDisplayName()(*string) {
    val, err := m.GetBackingStore().Get("displayName")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *CloudPcCloudApp) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["actionFailedErrorCode"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseCloudPcCloudAppActionFailedErrorCode)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetActionFailedErrorCode(val.(*CloudPcCloudAppActionFailedErrorCode))
        }
        return nil
    }
    res["actionFailedErrorMessage"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetActionFailedErrorMessage(val)
        }
        return nil
    }
    res["addedDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAddedDateTime(val)
        }
        return nil
    }
    res["appDetail"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateCloudPcCloudAppDetailFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAppDetail(val.(CloudPcCloudAppDetailable))
        }
        return nil
    }
    res["appStatus"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseCloudPcCloudAppStatus)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAppStatus(val.(*CloudPcCloudAppStatus))
        }
        return nil
    }
    res["availableToUser"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAvailableToUser(val)
        }
        return nil
    }
    res["description"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDescription(val)
        }
        return nil
    }
    res["discoveredAppName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDiscoveredAppName(val)
        }
        return nil
    }
    res["displayName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDisplayName(val)
        }
        return nil
    }
    res["lastPublishedDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLastPublishedDateTime(val)
        }
        return nil
    }
    res["provisioningPolicyId"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetProvisioningPolicyId(val)
        }
        return nil
    }
    res["scopeIds"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = *(v.(*string))
                }
            }
            m.SetScopeIds(res)
        }
        return nil
    }
    return res
}
// GetLastPublishedDateTime gets the lastPublishedDateTime property value. The latest date time when the admin published the cloud app. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. An IT admin can't set or modify it. Supports $filter, $select, and $orderBy. Read-only.
// returns a *Time when successful
func (m *CloudPcCloudApp) GetLastPublishedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    val, err := m.GetBackingStore().Get("lastPublishedDateTime")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    }
    return nil
}
// GetProvisioningPolicyId gets the provisioningPolicyId property value. The ID of the provisioning policy associated with this cloud app. For example, 96133506-c05b-4dbb-a150-ed4adc59895f. Supports $filter, $select, and $orderBy. Read-only. Required.
// returns a *string when successful
func (m *CloudPcCloudApp) GetProvisioningPolicyId()(*string) {
    val, err := m.GetBackingStore().Get("provisioningPolicyId")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetScopeIds gets the scopeIds property value. The list of scope tag IDs for this cloud app. Inherited from the provisioning policy when the app is created or updated. Read-only.
// returns a []string when successful
func (m *CloudPcCloudApp) GetScopeIds()([]string) {
    val, err := m.GetBackingStore().Get("scopeIds")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]string)
    }
    return nil
}
// Serialize serializes information the current object
func (m *CloudPcCloudApp) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    if m.GetActionFailedErrorCode() != nil {
        cast := (*m.GetActionFailedErrorCode()).String()
        err = writer.WriteStringValue("actionFailedErrorCode", &cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("actionFailedErrorMessage", m.GetActionFailedErrorMessage())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("addedDateTime", m.GetAddedDateTime())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteObjectValue("appDetail", m.GetAppDetail())
        if err != nil {
            return err
        }
    }
    if m.GetAppStatus() != nil {
        cast := (*m.GetAppStatus()).String()
        err = writer.WriteStringValue("appStatus", &cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteBoolValue("availableToUser", m.GetAvailableToUser())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("description", m.GetDescription())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("discoveredAppName", m.GetDiscoveredAppName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("displayName", m.GetDisplayName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("lastPublishedDateTime", m.GetLastPublishedDateTime())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("provisioningPolicyId", m.GetProvisioningPolicyId())
        if err != nil {
            return err
        }
    }
    if m.GetScopeIds() != nil {
        err = writer.WriteCollectionOfStringValues("scopeIds", m.GetScopeIds())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetActionFailedErrorCode sets the actionFailedErrorCode property value. The error code if publishing, unpublishing, or resetting a cloud app fails. Possible values are: cloudAppQuotaExceeded, cloudPcLicenseNotFound, internalServerError, appDiscoveryFailed, unknownFutureValue. The default value is null. Supports $filter, $select, $orderBy. Read-only.
func (m *CloudPcCloudApp) SetActionFailedErrorCode(value *CloudPcCloudAppActionFailedErrorCode)() {
    err := m.GetBackingStore().Set("actionFailedErrorCode", value)
    if err != nil {
        panic(err)
    }
}
// SetActionFailedErrorMessage sets the actionFailedErrorMessage property value. The error message when the IT admin failed to publish, unpublish, update, or reset a cloud app. For example: 'Publish failed because it exceeds the 500 cloud apps limitation under the policy. You need to unpublish some cloud apps under this policy in order to publish this cloud app again.' Read-only.
func (m *CloudPcCloudApp) SetActionFailedErrorMessage(value *string)() {
    err := m.GetBackingStore().Set("actionFailedErrorMessage", value)
    if err != nil {
        panic(err)
    }
}
// SetAddedDateTime sets the addedDateTime property value. The date and time when the cloud app was added to this tenant and became visible in the admin portal. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. An IT admin can't set or modify it. Supports $filter, $select, and $orderBy. Read-only.
func (m *CloudPcCloudApp) SetAddedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    err := m.GetBackingStore().Set("addedDateTime", value)
    if err != nil {
        panic(err)
    }
}
// SetAppDetail sets the appDetail property value. The appDetail property
func (m *CloudPcCloudApp) SetAppDetail(value CloudPcCloudAppDetailable)() {
    err := m.GetBackingStore().Set("appDetail", value)
    if err != nil {
        panic(err)
    }
}
// SetAppStatus sets the appStatus property value. The appStatus property
func (m *CloudPcCloudApp) SetAppStatus(value *CloudPcCloudAppStatus)() {
    err := m.GetBackingStore().Set("appStatus", value)
    if err != nil {
        panic(err)
    }
}
// SetAvailableToUser sets the availableToUser property value. Indicates whether this cloud app is available to end users through the end-user portal or the Windows App. The default value is false. It changes to true if the cloud app is successfully published, and reverts to false when the admin unpublishes the cloud app. Supports $filter, $select, and $orderBy.
func (m *CloudPcCloudApp) SetAvailableToUser(value *bool)() {
    err := m.GetBackingStore().Set("availableToUser", value)
    if err != nil {
        panic(err)
    }
}
// SetDescription sets the description property value. The description associated with the cloud app. The maximum allowed length for this property is 512 characters. Supports $filter, $select, and $orderBy.
func (m *CloudPcCloudApp) SetDescription(value *string)() {
    err := m.GetBackingStore().Set("description", value)
    if err != nil {
        panic(err)
    }
}
// SetDiscoveredAppName sets the discoveredAppName property value. Name of the discovered app associated with the cloud app. For example, Paint, Supports $filter, $select, and $orderBy. Read-only.
func (m *CloudPcCloudApp) SetDiscoveredAppName(value *string)() {
    err := m.GetBackingStore().Set("discoveredAppName", value)
    if err != nil {
        panic(err)
    }
}
// SetDisplayName sets the displayName property value. The display name for the cloud app. The display name for the cloud app, which appears on the end-user portal and must be unique within a single provisioning policy. It uses the discovered app name as the default value. The maximum allowed length for this property is 64 characters. For example, Paint. Supports $filter, $select, and $orderBy.
func (m *CloudPcCloudApp) SetDisplayName(value *string)() {
    err := m.GetBackingStore().Set("displayName", value)
    if err != nil {
        panic(err)
    }
}
// SetLastPublishedDateTime sets the lastPublishedDateTime property value. The latest date time when the admin published the cloud app. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. An IT admin can't set or modify it. Supports $filter, $select, and $orderBy. Read-only.
func (m *CloudPcCloudApp) SetLastPublishedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    err := m.GetBackingStore().Set("lastPublishedDateTime", value)
    if err != nil {
        panic(err)
    }
}
// SetProvisioningPolicyId sets the provisioningPolicyId property value. The ID of the provisioning policy associated with this cloud app. For example, 96133506-c05b-4dbb-a150-ed4adc59895f. Supports $filter, $select, and $orderBy. Read-only. Required.
func (m *CloudPcCloudApp) SetProvisioningPolicyId(value *string)() {
    err := m.GetBackingStore().Set("provisioningPolicyId", value)
    if err != nil {
        panic(err)
    }
}
// SetScopeIds sets the scopeIds property value. The list of scope tag IDs for this cloud app. Inherited from the provisioning policy when the app is created or updated. Read-only.
func (m *CloudPcCloudApp) SetScopeIds(value []string)() {
    err := m.GetBackingStore().Set("scopeIds", value)
    if err != nil {
        panic(err)
    }
}
type CloudPcCloudAppable interface {
    Entityable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetActionFailedErrorCode()(*CloudPcCloudAppActionFailedErrorCode)
    GetActionFailedErrorMessage()(*string)
    GetAddedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetAppDetail()(CloudPcCloudAppDetailable)
    GetAppStatus()(*CloudPcCloudAppStatus)
    GetAvailableToUser()(*bool)
    GetDescription()(*string)
    GetDiscoveredAppName()(*string)
    GetDisplayName()(*string)
    GetLastPublishedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetProvisioningPolicyId()(*string)
    GetScopeIds()([]string)
    SetActionFailedErrorCode(value *CloudPcCloudAppActionFailedErrorCode)()
    SetActionFailedErrorMessage(value *string)()
    SetAddedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetAppDetail(value CloudPcCloudAppDetailable)()
    SetAppStatus(value *CloudPcCloudAppStatus)()
    SetAvailableToUser(value *bool)()
    SetDescription(value *string)()
    SetDiscoveredAppName(value *string)()
    SetDisplayName(value *string)()
    SetLastPublishedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetProvisioningPolicyId(value *string)()
    SetScopeIds(value []string)()
}
