// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package networkaccess
type IntentCategory int

const (
    INITIALACCESS_INTENTCATEGORY IntentCategory = iota
    PERSISTENCE_INTENTCATEGORY
    PRIVILEGEESCALATION_INTENTCATEGORY
    DEFENSEEVASION_INTENTCATEGORY
    CREDENTIALACCESS_INTENTCATEGORY
    DISCOVERY_INTENTCATEGORY
    LATERALMOVEMENT_INTENTCATEGORY
    EXECUTION_INTENTCATEGORY
    COLLECTION_INTENTCATEGORY
    EXFILTRATION_INTENTCATEGORY
    COMMANDANDCONTROL_INTENTCATEGORY
    IMPACT_INTENTCATEGORY
    IMPAIRPROCESSCONTROL_INTENTCATEGORY
    INHIBITRESPONSEFUNCTION_INTENTCATEGORY
    RECONNAISSANCE_INTENTCATEGORY
    RESOURCEDEVELOPMENT_INTENTCATEGORY
    EVASION_INTENTCATEGORY
    UNKNOWNFUTUREVALUE_INTENTCATEGORY
)

func (i IntentCategory) String() string {
    return []string{"initialAccess", "persistence", "privilegeEscalation", "defenseEvasion", "credentialAccess", "discovery", "lateralMovement", "execution", "collection", "exfiltration", "commandAndControl", "impact", "impairProcessControl", "inhibitResponseFunction", "reconnaissance", "resourceDevelopment", "evasion", "unknownFutureValue"}[i]
}
func ParseIntentCategory(v string) (any, error) {
    result := INITIALACCESS_INTENTCATEGORY
    switch v {
        case "initialAccess":
            result = INITIALACCESS_INTENTCATEGORY
        case "persistence":
            result = PERSISTENCE_INTENTCATEGORY
        case "privilegeEscalation":
            result = PRIVILEGEESCALATION_INTENTCATEGORY
        case "defenseEvasion":
            result = DEFENSEEVASION_INTENTCATEGORY
        case "credentialAccess":
            result = CREDENTIALACCESS_INTENTCATEGORY
        case "discovery":
            result = DISCOVERY_INTENTCATEGORY
        case "lateralMovement":
            result = LATERALMOVEMENT_INTENTCATEGORY
        case "execution":
            result = EXECUTION_INTENTCATEGORY
        case "collection":
            result = COLLECTION_INTENTCATEGORY
        case "exfiltration":
            result = EXFILTRATION_INTENTCATEGORY
        case "commandAndControl":
            result = COMMANDANDCONTROL_INTENTCATEGORY
        case "impact":
            result = IMPACT_INTENTCATEGORY
        case "impairProcessControl":
            result = IMPAIRPROCESSCONTROL_INTENTCATEGORY
        case "inhibitResponseFunction":
            result = INHIBITRESPONSEFUNCTION_INTENTCATEGORY
        case "reconnaissance":
            result = RECONNAISSANCE_INTENTCATEGORY
        case "resourceDevelopment":
            result = RESOURCEDEVELOPMENT_INTENTCATEGORY
        case "evasion":
            result = EVASION_INTENTCATEGORY
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_INTENTCATEGORY
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeIntentCategory(values []IntentCategory) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i IntentCategory) isMultiValue() bool {
    return false
}
