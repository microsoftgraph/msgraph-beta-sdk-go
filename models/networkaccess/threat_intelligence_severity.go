// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package networkaccess
type ThreatIntelligenceSeverity int

const (
    LOW_THREATINTELLIGENCESEVERITY ThreatIntelligenceSeverity = iota
    MEDIUM_THREATINTELLIGENCESEVERITY
    HIGH_THREATINTELLIGENCESEVERITY
    UNKNOWNFUTUREVALUE_THREATINTELLIGENCESEVERITY
)

func (i ThreatIntelligenceSeverity) String() string {
    return []string{"low", "medium", "high", "unknownFutureValue"}[i]
}
func ParseThreatIntelligenceSeverity(v string) (any, error) {
    result := LOW_THREATINTELLIGENCESEVERITY
    switch v {
        case "low":
            result = LOW_THREATINTELLIGENCESEVERITY
        case "medium":
            result = MEDIUM_THREATINTELLIGENCESEVERITY
        case "high":
            result = HIGH_THREATINTELLIGENCESEVERITY
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_THREATINTELLIGENCESEVERITY
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeThreatIntelligenceSeverity(values []ThreatIntelligenceSeverity) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i ThreatIntelligenceSeverity) isMultiValue() bool {
    return false
}
