// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package networkaccess

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e "github.com/microsoft/kiota-abstractions-go/store"
)

type CloudApplicationReport struct {
    // Stores model information.
    backingStore ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore
}
// NewCloudApplicationReport instantiates a new CloudApplicationReport and sets the default values.
func NewCloudApplicationReport()(*CloudApplicationReport) {
    m := &CloudApplicationReport{
    }
    m.backingStore = ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStoreFactoryInstance();
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateCloudApplicationReportFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateCloudApplicationReportFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewCloudApplicationReport(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *CloudApplicationReport) GetAdditionalData()(map[string]any) {
    val , err :=  m.backingStore.Get("additionalData")
    if err != nil {
        panic(err)
    }
    if val == nil {
        var value = make(map[string]any);
        m.SetAdditionalData(value);
    }
    return val.(map[string]any)
}
// GetBackingStore gets the BackingStore property value. Stores model information.
// returns a BackingStore when successful
func (m *CloudApplicationReport) GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore) {
    return m.backingStore
}
// GetCategory gets the category property value. The category property
// returns a *CloudApplicationCategory when successful
func (m *CloudApplicationReport) GetCategory()(*CloudApplicationCategory) {
    val, err := m.GetBackingStore().Get("category")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*CloudApplicationCategory)
    }
    return nil
}
// GetCloudApplicationCatalogId gets the cloudApplicationCatalogId property value. The ID of the application in the SaaS application catalog.
// returns a *string when successful
func (m *CloudApplicationReport) GetCloudApplicationCatalogId()(*string) {
    val, err := m.GetBackingStore().Get("cloudApplicationCatalogId")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetComplianceScore gets the complianceScore property value. The compliance score of the application.
// returns a *int32 when successful
func (m *CloudApplicationReport) GetComplianceScore()(*int32) {
    val, err := m.GetBackingStore().Get("complianceScore")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int32)
    }
    return nil
}
// GetDeviceCount gets the deviceCount property value. Number of devices under this application.
// returns a *int32 when successful
func (m *CloudApplicationReport) GetDeviceCount()(*int32) {
    val, err := m.GetBackingStore().Get("deviceCount")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int32)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *CloudApplicationReport) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["category"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseCloudApplicationCategory)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCategory(val.(*CloudApplicationCategory))
        }
        return nil
    }
    res["cloudApplicationCatalogId"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCloudApplicationCatalogId(val)
        }
        return nil
    }
    res["complianceScore"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetComplianceScore(val)
        }
        return nil
    }
    res["deviceCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDeviceCount(val)
        }
        return nil
    }
    res["firstAccessDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetFirstAccessDateTime(val)
        }
        return nil
    }
    res["generalScore"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetGeneralScore(val)
        }
        return nil
    }
    res["lastAccessDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLastAccessDateTime(val)
        }
        return nil
    }
    res["legalScore"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLegalScore(val)
        }
        return nil
    }
    res["name"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetName(val)
        }
        return nil
    }
    res["@odata.type"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOdataType(val)
        }
        return nil
    }
    res["riskScore"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetRiskScore(val)
        }
        return nil
    }
    res["securityScore"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSecurityScore(val)
        }
        return nil
    }
    res["totalBytesReceived"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTotalBytesReceived(val)
        }
        return nil
    }
    res["totalBytesSent"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTotalBytesSent(val)
        }
        return nil
    }
    res["trafficType"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseTrafficType)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTrafficType(val.(*TrafficType))
        }
        return nil
    }
    res["transactionCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTransactionCount(val)
        }
        return nil
    }
    res["userCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUserCount(val)
        }
        return nil
    }
    return res
}
// GetFirstAccessDateTime gets the firstAccessDateTime property value. Timestamp of the first access to the application.
// returns a *Time when successful
func (m *CloudApplicationReport) GetFirstAccessDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    val, err := m.GetBackingStore().Get("firstAccessDateTime")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    }
    return nil
}
// GetGeneralScore gets the generalScore property value. The general score of the application.
// returns a *int32 when successful
func (m *CloudApplicationReport) GetGeneralScore()(*int32) {
    val, err := m.GetBackingStore().Get("generalScore")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int32)
    }
    return nil
}
// GetLastAccessDateTime gets the lastAccessDateTime property value. Timestamp of the last access to the application.
// returns a *Time when successful
func (m *CloudApplicationReport) GetLastAccessDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    val, err := m.GetBackingStore().Get("lastAccessDateTime")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    }
    return nil
}
// GetLegalScore gets the legalScore property value. The legal score of the application.
// returns a *int32 when successful
func (m *CloudApplicationReport) GetLegalScore()(*int32) {
    val, err := m.GetBackingStore().Get("legalScore")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int32)
    }
    return nil
}
// GetName gets the name property value. The name of the application (e.g., ChatGPT, Salesforce, Bing).
// returns a *string when successful
func (m *CloudApplicationReport) GetName()(*string) {
    val, err := m.GetBackingStore().Get("name")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetOdataType gets the @odata.type property value. The OdataType property
// returns a *string when successful
func (m *CloudApplicationReport) GetOdataType()(*string) {
    val, err := m.GetBackingStore().Get("odataType")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetRiskScore gets the riskScore property value. The risk score of the application.
// returns a *int32 when successful
func (m *CloudApplicationReport) GetRiskScore()(*int32) {
    val, err := m.GetBackingStore().Get("riskScore")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int32)
    }
    return nil
}
// GetSecurityScore gets the securityScore property value. The security score of the application.
// returns a *int32 when successful
func (m *CloudApplicationReport) GetSecurityScore()(*int32) {
    val, err := m.GetBackingStore().Get("securityScore")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int32)
    }
    return nil
}
// GetTotalBytesReceived gets the totalBytesReceived property value. Total bytes received from the application.
// returns a *int64 when successful
func (m *CloudApplicationReport) GetTotalBytesReceived()(*int64) {
    val, err := m.GetBackingStore().Get("totalBytesReceived")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int64)
    }
    return nil
}
// GetTotalBytesSent gets the totalBytesSent property value. Total bytes sent to the application.
// returns a *int64 when successful
func (m *CloudApplicationReport) GetTotalBytesSent()(*int64) {
    val, err := m.GetBackingStore().Get("totalBytesSent")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int64)
    }
    return nil
}
// GetTrafficType gets the trafficType property value. The trafficType property
// returns a *TrafficType when successful
func (m *CloudApplicationReport) GetTrafficType()(*TrafficType) {
    val, err := m.GetBackingStore().Get("trafficType")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*TrafficType)
    }
    return nil
}
// GetTransactionCount gets the transactionCount property value. Number of transactions under this application.
// returns a *int32 when successful
func (m *CloudApplicationReport) GetTransactionCount()(*int32) {
    val, err := m.GetBackingStore().Get("transactionCount")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int32)
    }
    return nil
}
// GetUserCount gets the userCount property value. Number of users under this application.
// returns a *int32 when successful
func (m *CloudApplicationReport) GetUserCount()(*int32) {
    val, err := m.GetBackingStore().Get("userCount")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int32)
    }
    return nil
}
// Serialize serializes information the current object
func (m *CloudApplicationReport) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    if m.GetCategory() != nil {
        cast := (*m.GetCategory()).String()
        err := writer.WriteStringValue("category", &cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("cloudApplicationCatalogId", m.GetCloudApplicationCatalogId())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("complianceScore", m.GetComplianceScore())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("deviceCount", m.GetDeviceCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteTimeValue("firstAccessDateTime", m.GetFirstAccessDateTime())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("generalScore", m.GetGeneralScore())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteTimeValue("lastAccessDateTime", m.GetLastAccessDateTime())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("legalScore", m.GetLegalScore())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("name", m.GetName())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("@odata.type", m.GetOdataType())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("riskScore", m.GetRiskScore())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("securityScore", m.GetSecurityScore())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt64Value("totalBytesReceived", m.GetTotalBytesReceived())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt64Value("totalBytesSent", m.GetTotalBytesSent())
        if err != nil {
            return err
        }
    }
    if m.GetTrafficType() != nil {
        cast := (*m.GetTrafficType()).String()
        err := writer.WriteStringValue("trafficType", &cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("transactionCount", m.GetTransactionCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("userCount", m.GetUserCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *CloudApplicationReport) SetAdditionalData(value map[string]any)() {
    err := m.GetBackingStore().Set("additionalData", value)
    if err != nil {
        panic(err)
    }
}
// SetBackingStore sets the BackingStore property value. Stores model information.
func (m *CloudApplicationReport) SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)() {
    m.backingStore = value
}
// SetCategory sets the category property value. The category property
func (m *CloudApplicationReport) SetCategory(value *CloudApplicationCategory)() {
    err := m.GetBackingStore().Set("category", value)
    if err != nil {
        panic(err)
    }
}
// SetCloudApplicationCatalogId sets the cloudApplicationCatalogId property value. The ID of the application in the SaaS application catalog.
func (m *CloudApplicationReport) SetCloudApplicationCatalogId(value *string)() {
    err := m.GetBackingStore().Set("cloudApplicationCatalogId", value)
    if err != nil {
        panic(err)
    }
}
// SetComplianceScore sets the complianceScore property value. The compliance score of the application.
func (m *CloudApplicationReport) SetComplianceScore(value *int32)() {
    err := m.GetBackingStore().Set("complianceScore", value)
    if err != nil {
        panic(err)
    }
}
// SetDeviceCount sets the deviceCount property value. Number of devices under this application.
func (m *CloudApplicationReport) SetDeviceCount(value *int32)() {
    err := m.GetBackingStore().Set("deviceCount", value)
    if err != nil {
        panic(err)
    }
}
// SetFirstAccessDateTime sets the firstAccessDateTime property value. Timestamp of the first access to the application.
func (m *CloudApplicationReport) SetFirstAccessDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    err := m.GetBackingStore().Set("firstAccessDateTime", value)
    if err != nil {
        panic(err)
    }
}
// SetGeneralScore sets the generalScore property value. The general score of the application.
func (m *CloudApplicationReport) SetGeneralScore(value *int32)() {
    err := m.GetBackingStore().Set("generalScore", value)
    if err != nil {
        panic(err)
    }
}
// SetLastAccessDateTime sets the lastAccessDateTime property value. Timestamp of the last access to the application.
func (m *CloudApplicationReport) SetLastAccessDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    err := m.GetBackingStore().Set("lastAccessDateTime", value)
    if err != nil {
        panic(err)
    }
}
// SetLegalScore sets the legalScore property value. The legal score of the application.
func (m *CloudApplicationReport) SetLegalScore(value *int32)() {
    err := m.GetBackingStore().Set("legalScore", value)
    if err != nil {
        panic(err)
    }
}
// SetName sets the name property value. The name of the application (e.g., ChatGPT, Salesforce, Bing).
func (m *CloudApplicationReport) SetName(value *string)() {
    err := m.GetBackingStore().Set("name", value)
    if err != nil {
        panic(err)
    }
}
// SetOdataType sets the @odata.type property value. The OdataType property
func (m *CloudApplicationReport) SetOdataType(value *string)() {
    err := m.GetBackingStore().Set("odataType", value)
    if err != nil {
        panic(err)
    }
}
// SetRiskScore sets the riskScore property value. The risk score of the application.
func (m *CloudApplicationReport) SetRiskScore(value *int32)() {
    err := m.GetBackingStore().Set("riskScore", value)
    if err != nil {
        panic(err)
    }
}
// SetSecurityScore sets the securityScore property value. The security score of the application.
func (m *CloudApplicationReport) SetSecurityScore(value *int32)() {
    err := m.GetBackingStore().Set("securityScore", value)
    if err != nil {
        panic(err)
    }
}
// SetTotalBytesReceived sets the totalBytesReceived property value. Total bytes received from the application.
func (m *CloudApplicationReport) SetTotalBytesReceived(value *int64)() {
    err := m.GetBackingStore().Set("totalBytesReceived", value)
    if err != nil {
        panic(err)
    }
}
// SetTotalBytesSent sets the totalBytesSent property value. Total bytes sent to the application.
func (m *CloudApplicationReport) SetTotalBytesSent(value *int64)() {
    err := m.GetBackingStore().Set("totalBytesSent", value)
    if err != nil {
        panic(err)
    }
}
// SetTrafficType sets the trafficType property value. The trafficType property
func (m *CloudApplicationReport) SetTrafficType(value *TrafficType)() {
    err := m.GetBackingStore().Set("trafficType", value)
    if err != nil {
        panic(err)
    }
}
// SetTransactionCount sets the transactionCount property value. Number of transactions under this application.
func (m *CloudApplicationReport) SetTransactionCount(value *int32)() {
    err := m.GetBackingStore().Set("transactionCount", value)
    if err != nil {
        panic(err)
    }
}
// SetUserCount sets the userCount property value. Number of users under this application.
func (m *CloudApplicationReport) SetUserCount(value *int32)() {
    err := m.GetBackingStore().Set("userCount", value)
    if err != nil {
        panic(err)
    }
}
type CloudApplicationReportable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackedModel
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)
    GetCategory()(*CloudApplicationCategory)
    GetCloudApplicationCatalogId()(*string)
    GetComplianceScore()(*int32)
    GetDeviceCount()(*int32)
    GetFirstAccessDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetGeneralScore()(*int32)
    GetLastAccessDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetLegalScore()(*int32)
    GetName()(*string)
    GetOdataType()(*string)
    GetRiskScore()(*int32)
    GetSecurityScore()(*int32)
    GetTotalBytesReceived()(*int64)
    GetTotalBytesSent()(*int64)
    GetTrafficType()(*TrafficType)
    GetTransactionCount()(*int32)
    GetUserCount()(*int32)
    SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)()
    SetCategory(value *CloudApplicationCategory)()
    SetCloudApplicationCatalogId(value *string)()
    SetComplianceScore(value *int32)()
    SetDeviceCount(value *int32)()
    SetFirstAccessDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetGeneralScore(value *int32)()
    SetLastAccessDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetLegalScore(value *int32)()
    SetName(value *string)()
    SetOdataType(value *string)()
    SetRiskScore(value *int32)()
    SetSecurityScore(value *int32)()
    SetTotalBytesReceived(value *int64)()
    SetTotalBytesSent(value *int64)()
    SetTrafficType(value *TrafficType)()
    SetTransactionCount(value *int32)()
    SetUserCount(value *int32)()
}
