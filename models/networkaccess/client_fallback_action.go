// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package networkaccess
type ClientFallbackAction int

const (
    BYPASS_CLIENTFALLBACKACTION ClientFallbackAction = iota
    BLOCK_CLIENTFALLBACKACTION
    UNKNOWNFUTUREVALUE_CLIENTFALLBACKACTION
)

func (i ClientFallbackAction) String() string {
    return []string{"bypass", "block", "unknownFutureValue"}[i]
}
func ParseClientFallbackAction(v string) (any, error) {
    result := BYPASS_CLIENTFALLBACKACTION
    switch v {
        case "bypass":
            result = BYPASS_CLIENTFALLBACKACTION
        case "block":
            result = BLOCK_CLIENTFALLBACKACTION
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_CLIENTFALLBACKACTION
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeClientFallbackAction(values []ClientFallbackAction) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i ClientFallbackAction) isMultiValue() bool {
    return false
}
