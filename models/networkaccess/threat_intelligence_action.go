// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package networkaccess
type ThreatIntelligenceAction int

const (
    ALLOW_THREATINTELLIGENCEACTION ThreatIntelligenceAction = iota
    BLOCK_THREATINTELLIGENCEACTION
    UNKNOWNFUTUREVALUE_THREATINTELLIGENCEACTION
)

func (i ThreatIntelligenceAction) String() string {
    return []string{"allow", "block", "unknownFutureValue"}[i]
}
func ParseThreatIntelligenceAction(v string) (any, error) {
    result := ALLOW_THREATINTELLIGENCEACTION
    switch v {
        case "allow":
            result = ALLOW_THREATINTELLIGENCEACTION
        case "block":
            result = BLOCK_THREATINTELLIGENCEACTION
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_THREATINTELLIGENCEACTION
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeThreatIntelligenceAction(values []ThreatIntelligenceAction) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i ThreatIntelligenceAction) isMultiValue() bool {
    return false
}
