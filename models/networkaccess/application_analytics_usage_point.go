// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package networkaccess

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e "github.com/microsoft/kiota-abstractions-go/store"
)

type ApplicationAnalyticsUsagePoint struct {
    // Stores model information.
    backingStore ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore
}
// NewApplicationAnalyticsUsagePoint instantiates a new ApplicationAnalyticsUsagePoint and sets the default values.
func NewApplicationAnalyticsUsagePoint()(*ApplicationAnalyticsUsagePoint) {
    m := &ApplicationAnalyticsUsagePoint{
    }
    m.backingStore = ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStoreFactoryInstance();
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateApplicationAnalyticsUsagePointFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateApplicationAnalyticsUsagePointFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewApplicationAnalyticsUsagePoint(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *ApplicationAnalyticsUsagePoint) GetAdditionalData()(map[string]any) {
    val , err :=  m.backingStore.Get("additionalData")
    if err != nil {
        panic(err)
    }
    if val == nil {
        var value = make(map[string]any);
        m.SetAdditionalData(value);
    }
    return val.(map[string]any)
}
// GetBackingStore gets the BackingStore property value. Stores model information.
// returns a BackingStore when successful
func (m *ApplicationAnalyticsUsagePoint) GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore) {
    return m.backingStore
}
// GetCloudAppsCount gets the cloudAppsCount property value. The count attributed to cloud applications for the specified aggregation type.
// returns a *int64 when successful
func (m *ApplicationAnalyticsUsagePoint) GetCloudAppsCount()(*int64) {
    val, err := m.GetBackingStore().Get("cloudAppsCount")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int64)
    }
    return nil
}
// GetEnterpriseAppsCount gets the enterpriseAppsCount property value. The count attributed to enterprise applications for the specified aggregation type.
// returns a *int64 when successful
func (m *ApplicationAnalyticsUsagePoint) GetEnterpriseAppsCount()(*int64) {
    val, err := m.GetBackingStore().Get("enterpriseAppsCount")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int64)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *ApplicationAnalyticsUsagePoint) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["cloudAppsCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCloudAppsCount(val)
        }
        return nil
    }
    res["enterpriseAppsCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetEnterpriseAppsCount(val)
        }
        return nil
    }
    res["@odata.type"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOdataType(val)
        }
        return nil
    }
    res["timeStampDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTimeStampDateTime(val)
        }
        return nil
    }
    res["totalCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTotalCount(val)
        }
        return nil
    }
    return res
}
// GetOdataType gets the @odata.type property value. The OdataType property
// returns a *string when successful
func (m *ApplicationAnalyticsUsagePoint) GetOdataType()(*string) {
    val, err := m.GetBackingStore().Get("odataType")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetTimeStampDateTime gets the timeStampDateTime property value. The date for which the aggregated data point represents.
// returns a *Time when successful
func (m *ApplicationAnalyticsUsagePoint) GetTimeStampDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    val, err := m.GetBackingStore().Get("timeStampDateTime")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    }
    return nil
}
// GetTotalCount gets the totalCount property value. The total count for the specified aggregation type (users, devices, or transactions).
// returns a *int64 when successful
func (m *ApplicationAnalyticsUsagePoint) GetTotalCount()(*int64) {
    val, err := m.GetBackingStore().Get("totalCount")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int64)
    }
    return nil
}
// Serialize serializes information the current object
func (m *ApplicationAnalyticsUsagePoint) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteInt64Value("cloudAppsCount", m.GetCloudAppsCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt64Value("enterpriseAppsCount", m.GetEnterpriseAppsCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("@odata.type", m.GetOdataType())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteTimeValue("timeStampDateTime", m.GetTimeStampDateTime())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt64Value("totalCount", m.GetTotalCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *ApplicationAnalyticsUsagePoint) SetAdditionalData(value map[string]any)() {
    err := m.GetBackingStore().Set("additionalData", value)
    if err != nil {
        panic(err)
    }
}
// SetBackingStore sets the BackingStore property value. Stores model information.
func (m *ApplicationAnalyticsUsagePoint) SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)() {
    m.backingStore = value
}
// SetCloudAppsCount sets the cloudAppsCount property value. The count attributed to cloud applications for the specified aggregation type.
func (m *ApplicationAnalyticsUsagePoint) SetCloudAppsCount(value *int64)() {
    err := m.GetBackingStore().Set("cloudAppsCount", value)
    if err != nil {
        panic(err)
    }
}
// SetEnterpriseAppsCount sets the enterpriseAppsCount property value. The count attributed to enterprise applications for the specified aggregation type.
func (m *ApplicationAnalyticsUsagePoint) SetEnterpriseAppsCount(value *int64)() {
    err := m.GetBackingStore().Set("enterpriseAppsCount", value)
    if err != nil {
        panic(err)
    }
}
// SetOdataType sets the @odata.type property value. The OdataType property
func (m *ApplicationAnalyticsUsagePoint) SetOdataType(value *string)() {
    err := m.GetBackingStore().Set("odataType", value)
    if err != nil {
        panic(err)
    }
}
// SetTimeStampDateTime sets the timeStampDateTime property value. The date for which the aggregated data point represents.
func (m *ApplicationAnalyticsUsagePoint) SetTimeStampDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    err := m.GetBackingStore().Set("timeStampDateTime", value)
    if err != nil {
        panic(err)
    }
}
// SetTotalCount sets the totalCount property value. The total count for the specified aggregation type (users, devices, or transactions).
func (m *ApplicationAnalyticsUsagePoint) SetTotalCount(value *int64)() {
    err := m.GetBackingStore().Set("totalCount", value)
    if err != nil {
        panic(err)
    }
}
type ApplicationAnalyticsUsagePointable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackedModel
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)
    GetCloudAppsCount()(*int64)
    GetEnterpriseAppsCount()(*int64)
    GetOdataType()(*string)
    GetTimeStampDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetTotalCount()(*int64)
    SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)()
    SetCloudAppsCount(value *int64)()
    SetEnterpriseAppsCount(value *int64)()
    SetOdataType(value *string)()
    SetTimeStampDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetTotalCount(value *int64)()
}
