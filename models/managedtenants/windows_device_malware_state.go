package managedtenants

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be "github.com/microsoftgraph/msgraph-beta-sdk-go/models"
)

// WindowsDeviceMalwareState provides operations to manage the collection of activityStatistics entities.
type WindowsDeviceMalwareState struct {
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Entity
    // The additional information URL for the discovered malware. Optional. Read-only.
    additionalInformationUrl *string
    // The number of times the piece of malware has been detected. Optional. Read-only.
    detectionCount *int32
    // A flag indicating whether the device has been deleted. Optional. Read-only.
    deviceDeleted *bool
    // The date and time the piece of malware was initially detected. Optional. Read-only.
    initialDetectionDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time
    // Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
    lastRefreshedDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time
    // The date and time the malware state was last changed. Optional. Read-only.
    lastStateChangeDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time
    // The category for the detected malware. Optional. Read-only.
    malwareCategory *string
    // The display name for the detected malware. Optional. Read-only.
    malwareDisplayName *string
    // The execution state for the detected malware. Optional. Read-only.
    malwareExecutionState *string
    // The unique identifier for the detected malware. Optional. Read-only.
    malwareId *string
    // The severity for the detected malware. Optional. Read-only.
    malwareSeverity *string
    // The threat state for the detected malware. Optional. Read-only.
    malwareThreatState *string
    // The identifier for the managed device where the malware was detected. Optional. Read-only.
    managedDeviceId *string
    // The display name for the managed device where the malware was detected. Optional. Read-only.
    managedDeviceName *string
    // The display name for the managed tenant. Optional. Read-only.
    tenantDisplayName *string
    // The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only.
    tenantId *string
}
// NewWindowsDeviceMalwareState instantiates a new windowsDeviceMalwareState and sets the default values.
func NewWindowsDeviceMalwareState()(*WindowsDeviceMalwareState) {
    m := &WindowsDeviceMalwareState{
        Entity: *ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.NewEntity(),
    }
    odataTypeValue := "#microsoft.graph.managedTenants.windowsDeviceMalwareState";
    m.SetOdataType(&odataTypeValue);
    return m
}
// CreateWindowsDeviceMalwareStateFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
func CreateWindowsDeviceMalwareStateFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewWindowsDeviceMalwareState(), nil
}
// GetAdditionalInformationUrl gets the additionalInformationUrl property value. The additional information URL for the discovered malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetAdditionalInformationUrl()(*string) {
    if m == nil {
        return nil
    } else {
        return m.additionalInformationUrl
    }
}
// GetDetectionCount gets the detectionCount property value. The number of times the piece of malware has been detected. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetDetectionCount()(*int32) {
    if m == nil {
        return nil
    } else {
        return m.detectionCount
    }
}
// GetDeviceDeleted gets the deviceDeleted property value. A flag indicating whether the device has been deleted. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetDeviceDeleted()(*bool) {
    if m == nil {
        return nil
    } else {
        return m.deviceDeleted
    }
}
// GetFieldDeserializers the deserialization information for the current model
func (m *WindowsDeviceMalwareState) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["additionalInformationUrl"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAdditionalInformationUrl(val)
        }
        return nil
    }
    res["detectionCount"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDetectionCount(val)
        }
        return nil
    }
    res["deviceDeleted"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDeviceDeleted(val)
        }
        return nil
    }
    res["initialDetectionDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetInitialDetectionDateTime(val)
        }
        return nil
    }
    res["lastRefreshedDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLastRefreshedDateTime(val)
        }
        return nil
    }
    res["lastStateChangeDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLastStateChangeDateTime(val)
        }
        return nil
    }
    res["malwareCategory"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMalwareCategory(val)
        }
        return nil
    }
    res["malwareDisplayName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMalwareDisplayName(val)
        }
        return nil
    }
    res["malwareExecutionState"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMalwareExecutionState(val)
        }
        return nil
    }
    res["malwareId"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMalwareId(val)
        }
        return nil
    }
    res["malwareSeverity"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMalwareSeverity(val)
        }
        return nil
    }
    res["malwareThreatState"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMalwareThreatState(val)
        }
        return nil
    }
    res["managedDeviceId"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetManagedDeviceId(val)
        }
        return nil
    }
    res["managedDeviceName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetManagedDeviceName(val)
        }
        return nil
    }
    res["tenantDisplayName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTenantDisplayName(val)
        }
        return nil
    }
    res["tenantId"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTenantId(val)
        }
        return nil
    }
    return res
}
// GetInitialDetectionDateTime gets the initialDetectionDateTime property value. The date and time the piece of malware was initially detected. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetInitialDetectionDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.initialDetectionDateTime
    }
}
// GetLastRefreshedDateTime gets the lastRefreshedDateTime property value. Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetLastRefreshedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.lastRefreshedDateTime
    }
}
// GetLastStateChangeDateTime gets the lastStateChangeDateTime property value. The date and time the malware state was last changed. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetLastStateChangeDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.lastStateChangeDateTime
    }
}
// GetMalwareCategory gets the malwareCategory property value. The category for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetMalwareCategory()(*string) {
    if m == nil {
        return nil
    } else {
        return m.malwareCategory
    }
}
// GetMalwareDisplayName gets the malwareDisplayName property value. The display name for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetMalwareDisplayName()(*string) {
    if m == nil {
        return nil
    } else {
        return m.malwareDisplayName
    }
}
// GetMalwareExecutionState gets the malwareExecutionState property value. The execution state for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetMalwareExecutionState()(*string) {
    if m == nil {
        return nil
    } else {
        return m.malwareExecutionState
    }
}
// GetMalwareId gets the malwareId property value. The unique identifier for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetMalwareId()(*string) {
    if m == nil {
        return nil
    } else {
        return m.malwareId
    }
}
// GetMalwareSeverity gets the malwareSeverity property value. The severity for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetMalwareSeverity()(*string) {
    if m == nil {
        return nil
    } else {
        return m.malwareSeverity
    }
}
// GetMalwareThreatState gets the malwareThreatState property value. The threat state for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetMalwareThreatState()(*string) {
    if m == nil {
        return nil
    } else {
        return m.malwareThreatState
    }
}
// GetManagedDeviceId gets the managedDeviceId property value. The identifier for the managed device where the malware was detected. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetManagedDeviceId()(*string) {
    if m == nil {
        return nil
    } else {
        return m.managedDeviceId
    }
}
// GetManagedDeviceName gets the managedDeviceName property value. The display name for the managed device where the malware was detected. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetManagedDeviceName()(*string) {
    if m == nil {
        return nil
    } else {
        return m.managedDeviceName
    }
}
// GetTenantDisplayName gets the tenantDisplayName property value. The display name for the managed tenant. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetTenantDisplayName()(*string) {
    if m == nil {
        return nil
    } else {
        return m.tenantDisplayName
    }
}
// GetTenantId gets the tenantId property value. The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only.
func (m *WindowsDeviceMalwareState) GetTenantId()(*string) {
    if m == nil {
        return nil
    } else {
        return m.tenantId
    }
}
// Serialize serializes information the current object
func (m *WindowsDeviceMalwareState) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    {
        err = writer.WriteStringValue("additionalInformationUrl", m.GetAdditionalInformationUrl())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteInt32Value("detectionCount", m.GetDetectionCount())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteBoolValue("deviceDeleted", m.GetDeviceDeleted())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("initialDetectionDateTime", m.GetInitialDetectionDateTime())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("lastRefreshedDateTime", m.GetLastRefreshedDateTime())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("lastStateChangeDateTime", m.GetLastStateChangeDateTime())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("malwareCategory", m.GetMalwareCategory())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("malwareDisplayName", m.GetMalwareDisplayName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("malwareExecutionState", m.GetMalwareExecutionState())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("malwareId", m.GetMalwareId())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("malwareSeverity", m.GetMalwareSeverity())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("malwareThreatState", m.GetMalwareThreatState())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("managedDeviceId", m.GetManagedDeviceId())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("managedDeviceName", m.GetManagedDeviceName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("tenantDisplayName", m.GetTenantDisplayName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("tenantId", m.GetTenantId())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalInformationUrl sets the additionalInformationUrl property value. The additional information URL for the discovered malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetAdditionalInformationUrl(value *string)() {
    if m != nil {
        m.additionalInformationUrl = value
    }
}
// SetDetectionCount sets the detectionCount property value. The number of times the piece of malware has been detected. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetDetectionCount(value *int32)() {
    if m != nil {
        m.detectionCount = value
    }
}
// SetDeviceDeleted sets the deviceDeleted property value. A flag indicating whether the device has been deleted. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetDeviceDeleted(value *bool)() {
    if m != nil {
        m.deviceDeleted = value
    }
}
// SetInitialDetectionDateTime sets the initialDetectionDateTime property value. The date and time the piece of malware was initially detected. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetInitialDetectionDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    if m != nil {
        m.initialDetectionDateTime = value
    }
}
// SetLastRefreshedDateTime sets the lastRefreshedDateTime property value. Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetLastRefreshedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    if m != nil {
        m.lastRefreshedDateTime = value
    }
}
// SetLastStateChangeDateTime sets the lastStateChangeDateTime property value. The date and time the malware state was last changed. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetLastStateChangeDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    if m != nil {
        m.lastStateChangeDateTime = value
    }
}
// SetMalwareCategory sets the malwareCategory property value. The category for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetMalwareCategory(value *string)() {
    if m != nil {
        m.malwareCategory = value
    }
}
// SetMalwareDisplayName sets the malwareDisplayName property value. The display name for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetMalwareDisplayName(value *string)() {
    if m != nil {
        m.malwareDisplayName = value
    }
}
// SetMalwareExecutionState sets the malwareExecutionState property value. The execution state for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetMalwareExecutionState(value *string)() {
    if m != nil {
        m.malwareExecutionState = value
    }
}
// SetMalwareId sets the malwareId property value. The unique identifier for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetMalwareId(value *string)() {
    if m != nil {
        m.malwareId = value
    }
}
// SetMalwareSeverity sets the malwareSeverity property value. The severity for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetMalwareSeverity(value *string)() {
    if m != nil {
        m.malwareSeverity = value
    }
}
// SetMalwareThreatState sets the malwareThreatState property value. The threat state for the detected malware. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetMalwareThreatState(value *string)() {
    if m != nil {
        m.malwareThreatState = value
    }
}
// SetManagedDeviceId sets the managedDeviceId property value. The identifier for the managed device where the malware was detected. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetManagedDeviceId(value *string)() {
    if m != nil {
        m.managedDeviceId = value
    }
}
// SetManagedDeviceName sets the managedDeviceName property value. The display name for the managed device where the malware was detected. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetManagedDeviceName(value *string)() {
    if m != nil {
        m.managedDeviceName = value
    }
}
// SetTenantDisplayName sets the tenantDisplayName property value. The display name for the managed tenant. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetTenantDisplayName(value *string)() {
    if m != nil {
        m.tenantDisplayName = value
    }
}
// SetTenantId sets the tenantId property value. The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only.
func (m *WindowsDeviceMalwareState) SetTenantId(value *string)() {
    if m != nil {
        m.tenantId = value
    }
}
