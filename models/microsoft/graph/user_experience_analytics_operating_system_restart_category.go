package graph
import (
    "strings"
    "errors"
)
// Provides operations to manage the deviceManagement singleton.
type UserExperienceAnalyticsOperatingSystemRestartCategory int

const (
    UNKNOWN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY UserExperienceAnalyticsOperatingSystemRestartCategory = iota
    RESTARTWITHUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    RESTARTWITHOUTUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    BLUESCREEN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    SHUTDOWNWITHUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    SHUTDOWNWITHOUTUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    LONGPOWERBUTTONPRESS_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    BOOTERROR_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    UPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
)

func (i UserExperienceAnalyticsOperatingSystemRestartCategory) String() string {
    return []string{"UNKNOWN", "RESTARTWITHUPDATE", "RESTARTWITHOUTUPDATE", "BLUESCREEN", "SHUTDOWNWITHUPDATE", "SHUTDOWNWITHOUTUPDATE", "LONGPOWERBUTTONPRESS", "BOOTERROR", "UPDATE"}[i]
}
func ParseUserExperienceAnalyticsOperatingSystemRestartCategory(v string) (interface{}, error) {
    result := UNKNOWN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    switch strings.ToUpper(v) {
        case "UNKNOWN":
            result = UNKNOWN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        case "RESTARTWITHUPDATE":
            result = RESTARTWITHUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        case "RESTARTWITHOUTUPDATE":
            result = RESTARTWITHOUTUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        case "BLUESCREEN":
            result = BLUESCREEN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        case "SHUTDOWNWITHUPDATE":
            result = SHUTDOWNWITHUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        case "SHUTDOWNWITHOUTUPDATE":
            result = SHUTDOWNWITHOUTUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        case "LONGPOWERBUTTONPRESS":
            result = LONGPOWERBUTTONPRESS_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        case "BOOTERROR":
            result = BOOTERROR_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        case "UPDATE":
            result = UPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
        default:
            return 0, errors.New("Unknown UserExperienceAnalyticsOperatingSystemRestartCategory value: " + v)
    }
    return &result, nil
}
func SerializeUserExperienceAnalyticsOperatingSystemRestartCategory(values []UserExperienceAnalyticsOperatingSystemRestartCategory) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
