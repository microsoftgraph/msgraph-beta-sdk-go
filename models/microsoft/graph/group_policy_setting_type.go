package graph
import (
    "strings"
    "errors"
)
// 
type GroupPolicySettingType int

const (
    UNKNOWN_GROUPPOLICYSETTINGTYPE GroupPolicySettingType = iota
    POLICY_GROUPPOLICYSETTINGTYPE
    ACCOUNT_GROUPPOLICYSETTINGTYPE
    SECURITYOPTIONS_GROUPPOLICYSETTINGTYPE
    USERRIGHTSASSIGNMENT_GROUPPOLICYSETTINGTYPE
    AUDITSETTING_GROUPPOLICYSETTINGTYPE
    WINDOWSFIREWALLSETTINGS_GROUPPOLICYSETTINGTYPE
    APPLOCKERRULECOLLECTION_GROUPPOLICYSETTINGTYPE
    DATASOURCESSETTINGS_GROUPPOLICYSETTINGTYPE
    DEVICESSETTINGS_GROUPPOLICYSETTINGTYPE
    DRIVEMAPSETTINGS_GROUPPOLICYSETTINGTYPE
    ENVIRONMENTVARIABLES_GROUPPOLICYSETTINGTYPE
    FILESSETTINGS_GROUPPOLICYSETTINGTYPE
    FOLDEROPTIONS_GROUPPOLICYSETTINGTYPE
    FOLDERS_GROUPPOLICYSETTINGTYPE
    INIFILES_GROUPPOLICYSETTINGTYPE
    INTERNETOPTIONS_GROUPPOLICYSETTINGTYPE
    LOCALUSERSANDGROUPS_GROUPPOLICYSETTINGTYPE
    NETWORKOPTIONS_GROUPPOLICYSETTINGTYPE
    NETWORKSHARES_GROUPPOLICYSETTINGTYPE
    NTSERVICES_GROUPPOLICYSETTINGTYPE
    POWEROPTIONS_GROUPPOLICYSETTINGTYPE
    PRINTERS_GROUPPOLICYSETTINGTYPE
    REGIONALOPTIONSSETTINGS_GROUPPOLICYSETTINGTYPE
    REGISTRYSETTINGS_GROUPPOLICYSETTINGTYPE
    SCHEDULEDTASKS_GROUPPOLICYSETTINGTYPE
    SHORTCUTSETTINGS_GROUPPOLICYSETTINGTYPE
    STARTMENUSETTINGS_GROUPPOLICYSETTINGTYPE
)

func (i GroupPolicySettingType) String() string {
    return []string{"UNKNOWN", "POLICY", "ACCOUNT", "SECURITYOPTIONS", "USERRIGHTSASSIGNMENT", "AUDITSETTING", "WINDOWSFIREWALLSETTINGS", "APPLOCKERRULECOLLECTION", "DATASOURCESSETTINGS", "DEVICESSETTINGS", "DRIVEMAPSETTINGS", "ENVIRONMENTVARIABLES", "FILESSETTINGS", "FOLDEROPTIONS", "FOLDERS", "INIFILES", "INTERNETOPTIONS", "LOCALUSERSANDGROUPS", "NETWORKOPTIONS", "NETWORKSHARES", "NTSERVICES", "POWEROPTIONS", "PRINTERS", "REGIONALOPTIONSSETTINGS", "REGISTRYSETTINGS", "SCHEDULEDTASKS", "SHORTCUTSETTINGS", "STARTMENUSETTINGS"}[i]
}
func ParseGroupPolicySettingType(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "UNKNOWN":
            return UNKNOWN_GROUPPOLICYSETTINGTYPE, nil
        case "POLICY":
            return POLICY_GROUPPOLICYSETTINGTYPE, nil
        case "ACCOUNT":
            return ACCOUNT_GROUPPOLICYSETTINGTYPE, nil
        case "SECURITYOPTIONS":
            return SECURITYOPTIONS_GROUPPOLICYSETTINGTYPE, nil
        case "USERRIGHTSASSIGNMENT":
            return USERRIGHTSASSIGNMENT_GROUPPOLICYSETTINGTYPE, nil
        case "AUDITSETTING":
            return AUDITSETTING_GROUPPOLICYSETTINGTYPE, nil
        case "WINDOWSFIREWALLSETTINGS":
            return WINDOWSFIREWALLSETTINGS_GROUPPOLICYSETTINGTYPE, nil
        case "APPLOCKERRULECOLLECTION":
            return APPLOCKERRULECOLLECTION_GROUPPOLICYSETTINGTYPE, nil
        case "DATASOURCESSETTINGS":
            return DATASOURCESSETTINGS_GROUPPOLICYSETTINGTYPE, nil
        case "DEVICESSETTINGS":
            return DEVICESSETTINGS_GROUPPOLICYSETTINGTYPE, nil
        case "DRIVEMAPSETTINGS":
            return DRIVEMAPSETTINGS_GROUPPOLICYSETTINGTYPE, nil
        case "ENVIRONMENTVARIABLES":
            return ENVIRONMENTVARIABLES_GROUPPOLICYSETTINGTYPE, nil
        case "FILESSETTINGS":
            return FILESSETTINGS_GROUPPOLICYSETTINGTYPE, nil
        case "FOLDEROPTIONS":
            return FOLDEROPTIONS_GROUPPOLICYSETTINGTYPE, nil
        case "FOLDERS":
            return FOLDERS_GROUPPOLICYSETTINGTYPE, nil
        case "INIFILES":
            return INIFILES_GROUPPOLICYSETTINGTYPE, nil
        case "INTERNETOPTIONS":
            return INTERNETOPTIONS_GROUPPOLICYSETTINGTYPE, nil
        case "LOCALUSERSANDGROUPS":
            return LOCALUSERSANDGROUPS_GROUPPOLICYSETTINGTYPE, nil
        case "NETWORKOPTIONS":
            return NETWORKOPTIONS_GROUPPOLICYSETTINGTYPE, nil
        case "NETWORKSHARES":
            return NETWORKSHARES_GROUPPOLICYSETTINGTYPE, nil
        case "NTSERVICES":
            return NTSERVICES_GROUPPOLICYSETTINGTYPE, nil
        case "POWEROPTIONS":
            return POWEROPTIONS_GROUPPOLICYSETTINGTYPE, nil
        case "PRINTERS":
            return PRINTERS_GROUPPOLICYSETTINGTYPE, nil
        case "REGIONALOPTIONSSETTINGS":
            return REGIONALOPTIONSSETTINGS_GROUPPOLICYSETTINGTYPE, nil
        case "REGISTRYSETTINGS":
            return REGISTRYSETTINGS_GROUPPOLICYSETTINGTYPE, nil
        case "SCHEDULEDTASKS":
            return SCHEDULEDTASKS_GROUPPOLICYSETTINGTYPE, nil
        case "SHORTCUTSETTINGS":
            return SHORTCUTSETTINGS_GROUPPOLICYSETTINGTYPE, nil
        case "STARTMENUSETTINGS":
            return STARTMENUSETTINGS_GROUPPOLICYSETTINGTYPE, nil
    }
    return 0, errors.New("Unknown GroupPolicySettingType value: " + v)
}
func SerializeGroupPolicySettingType(values []GroupPolicySettingType) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
