package graph
import (
    "strings"
    "errors"
)
// Provides operations to call the executeAction method.
type ManagedDeviceRemoteAction int

const (
    RETIRE_MANAGEDDEVICEREMOTEACTION ManagedDeviceRemoteAction = iota
    DELETE_MANAGEDDEVICEREMOTEACTION
    FULLSCAN_MANAGEDDEVICEREMOTEACTION
    QUICKSCAN_MANAGEDDEVICEREMOTEACTION
    SIGNATUREUPDATE_MANAGEDDEVICEREMOTEACTION
    WIPE_MANAGEDDEVICEREMOTEACTION
    CUSTOMTEXTNOTIFICATION_MANAGEDDEVICEREMOTEACTION
    REBOOTNOW_MANAGEDDEVICEREMOTEACTION
    SETDEVICENAME_MANAGEDDEVICEREMOTEACTION
    SYNCDEVICE_MANAGEDDEVICEREMOTEACTION
    DEPROVISION_MANAGEDDEVICEREMOTEACTION
    DISABLE_MANAGEDDEVICEREMOTEACTION
    REENABLE_MANAGEDDEVICEREMOTEACTION
    MOVEDEVICETOORGANIZATIONALUNIT_MANAGEDDEVICEREMOTEACTION
    ACTIVATEDEVICEESIM_MANAGEDDEVICEREMOTEACTION
    COLLECTDIAGNOSTICS_MANAGEDDEVICEREMOTEACTION
)

func (i ManagedDeviceRemoteAction) String() string {
    return []string{"RETIRE", "DELETE", "FULLSCAN", "QUICKSCAN", "SIGNATUREUPDATE", "WIPE", "CUSTOMTEXTNOTIFICATION", "REBOOTNOW", "SETDEVICENAME", "SYNCDEVICE", "DEPROVISION", "DISABLE", "REENABLE", "MOVEDEVICETOORGANIZATIONALUNIT", "ACTIVATEDEVICEESIM", "COLLECTDIAGNOSTICS"}[i]
}
func ParseManagedDeviceRemoteAction(v string) (interface{}, error) {
    result := RETIRE_MANAGEDDEVICEREMOTEACTION
    switch strings.ToUpper(v) {
        case "RETIRE":
            result = RETIRE_MANAGEDDEVICEREMOTEACTION
        case "DELETE":
            result = DELETE_MANAGEDDEVICEREMOTEACTION
        case "FULLSCAN":
            result = FULLSCAN_MANAGEDDEVICEREMOTEACTION
        case "QUICKSCAN":
            result = QUICKSCAN_MANAGEDDEVICEREMOTEACTION
        case "SIGNATUREUPDATE":
            result = SIGNATUREUPDATE_MANAGEDDEVICEREMOTEACTION
        case "WIPE":
            result = WIPE_MANAGEDDEVICEREMOTEACTION
        case "CUSTOMTEXTNOTIFICATION":
            result = CUSTOMTEXTNOTIFICATION_MANAGEDDEVICEREMOTEACTION
        case "REBOOTNOW":
            result = REBOOTNOW_MANAGEDDEVICEREMOTEACTION
        case "SETDEVICENAME":
            result = SETDEVICENAME_MANAGEDDEVICEREMOTEACTION
        case "SYNCDEVICE":
            result = SYNCDEVICE_MANAGEDDEVICEREMOTEACTION
        case "DEPROVISION":
            result = DEPROVISION_MANAGEDDEVICEREMOTEACTION
        case "DISABLE":
            result = DISABLE_MANAGEDDEVICEREMOTEACTION
        case "REENABLE":
            result = REENABLE_MANAGEDDEVICEREMOTEACTION
        case "MOVEDEVICETOORGANIZATIONALUNIT":
            result = MOVEDEVICETOORGANIZATIONALUNIT_MANAGEDDEVICEREMOTEACTION
        case "ACTIVATEDEVICEESIM":
            result = ACTIVATEDEVICEESIM_MANAGEDDEVICEREMOTEACTION
        case "COLLECTDIAGNOSTICS":
            result = COLLECTDIAGNOSTICS_MANAGEDDEVICEREMOTEACTION
        default:
            return 0, errors.New("Unknown ManagedDeviceRemoteAction value: " + v)
    }
    return &result, nil
}
func SerializeManagedDeviceRemoteAction(values []ManagedDeviceRemoteAction) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
