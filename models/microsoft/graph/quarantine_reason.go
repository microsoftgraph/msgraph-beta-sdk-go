package graph
import (
    "strings"
    "errors"
)
// Provides operations to call the instantiate method.
type QuarantineReason int

const (
    ENCOUNTEREDBASEESCROWTHRESHOLD_QUARANTINEREASON QuarantineReason = iota
    ENCOUNTEREDTOTALESCROWTHRESHOLD_QUARANTINEREASON
    ENCOUNTEREDESCROWPROPORTIONTHRESHOLD_QUARANTINEREASON
    ENCOUNTEREDQUARANTINEEXCEPTION_QUARANTINEREASON
    UNKNOWN_QUARANTINEREASON
    QUARANTINEDONDEMAND_QUARANTINEREASON
    TOOMANYDELETES_QUARANTINEREASON
    INGESTIONINTERRUPTED_QUARANTINEREASON
)

func (i QuarantineReason) String() string {
    return []string{"ENCOUNTEREDBASEESCROWTHRESHOLD", "ENCOUNTEREDTOTALESCROWTHRESHOLD", "ENCOUNTEREDESCROWPROPORTIONTHRESHOLD", "ENCOUNTEREDQUARANTINEEXCEPTION", "UNKNOWN", "QUARANTINEDONDEMAND", "TOOMANYDELETES", "INGESTIONINTERRUPTED"}[i]
}
func ParseQuarantineReason(v string) (interface{}, error) {
    result := ENCOUNTEREDBASEESCROWTHRESHOLD_QUARANTINEREASON
    switch strings.ToUpper(v) {
        case "ENCOUNTEREDBASEESCROWTHRESHOLD":
            result = ENCOUNTEREDBASEESCROWTHRESHOLD_QUARANTINEREASON
        case "ENCOUNTEREDTOTALESCROWTHRESHOLD":
            result = ENCOUNTEREDTOTALESCROWTHRESHOLD_QUARANTINEREASON
        case "ENCOUNTEREDESCROWPROPORTIONTHRESHOLD":
            result = ENCOUNTEREDESCROWPROPORTIONTHRESHOLD_QUARANTINEREASON
        case "ENCOUNTEREDQUARANTINEEXCEPTION":
            result = ENCOUNTEREDQUARANTINEEXCEPTION_QUARANTINEREASON
        case "UNKNOWN":
            result = UNKNOWN_QUARANTINEREASON
        case "QUARANTINEDONDEMAND":
            result = QUARANTINEDONDEMAND_QUARANTINEREASON
        case "TOOMANYDELETES":
            result = TOOMANYDELETES_QUARANTINEREASON
        case "INGESTIONINTERRUPTED":
            result = INGESTIONINTERRUPTED_QUARANTINEREASON
        default:
            return 0, errors.New("Unknown QuarantineReason value: " + v)
    }
    return &result, nil
}
func SerializeQuarantineReason(values []QuarantineReason) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
