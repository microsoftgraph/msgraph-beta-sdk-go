// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
// Extensible Authentication Protocol (EAP) configuration types.
type IosWiredNetworkEapType int

const (
    // EAP-Transport Layer Security (EAP-TLS).
    EAPTLS_IOSWIREDNETWORKEAPTYPE IosWiredNetworkEapType = iota
    // EAP-Tunneled Transport Layer Security (EAP-TTLS).
    EAPTTLS_IOSWIREDNETWORKEAPTYPE
    // Protected Extensible Authentication Protocol (PEAP).
    PEAP_IOSWIREDNETWORKEAPTYPE
    // EAP-Flexible Authentication via Secure Tunneling (EAP-FAST).
    EAPFAST_IOSWIREDNETWORKEAPTYPE
    // EAP-Authentication and Key Agreement (EAP-AKA).
    EAPAKA_IOSWIREDNETWORKEAPTYPE
    // Evolvable enumeration sentinel value. Do not use.
    UNKNOWNFUTUREVALUE_IOSWIREDNETWORKEAPTYPE
)

func (i IosWiredNetworkEapType) String() string {
    return []string{"eapTls", "eapTtls", "peap", "eapFast", "eapAka", "unknownFutureValue"}[i]
}
func ParseIosWiredNetworkEapType(v string) (any, error) {
    result := EAPTLS_IOSWIREDNETWORKEAPTYPE
    switch v {
        case "eapTls":
            result = EAPTLS_IOSWIREDNETWORKEAPTYPE
        case "eapTtls":
            result = EAPTTLS_IOSWIREDNETWORKEAPTYPE
        case "peap":
            result = PEAP_IOSWIREDNETWORKEAPTYPE
        case "eapFast":
            result = EAPFAST_IOSWIREDNETWORKEAPTYPE
        case "eapAka":
            result = EAPAKA_IOSWIREDNETWORKEAPTYPE
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_IOSWIREDNETWORKEAPTYPE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeIosWiredNetworkEapType(values []IosWiredNetworkEapType) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i IosWiredNetworkEapType) isMultiValue() bool {
    return false
}
