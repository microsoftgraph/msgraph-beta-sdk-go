// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type FileStorageContainerTypeAppPermission int

const (
    NONE_FILESTORAGECONTAINERTYPEAPPPERMISSION FileStorageContainerTypeAppPermission = iota
    READCONTENT_FILESTORAGECONTAINERTYPEAPPPERMISSION
    WRITECONTENT_FILESTORAGECONTAINERTYPEAPPPERMISSION
    MANAGECONTENT_FILESTORAGECONTAINERTYPEAPPPERMISSION
    CREATE_FILESTORAGECONTAINERTYPEAPPPERMISSION
    DELETE_FILESTORAGECONTAINERTYPEAPPPERMISSION
    READ_FILESTORAGECONTAINERTYPEAPPPERMISSION
    WRITE_FILESTORAGECONTAINERTYPEAPPPERMISSION
    ENUMERATEPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
    ADDPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
    UPDATEPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
    DELETEPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
    DELETEOWNPERMISSION_FILESTORAGECONTAINERTYPEAPPPERMISSION
    MANAGEPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
    FULL_FILESTORAGECONTAINERTYPEAPPPERMISSION
    UNKNOWNFUTUREVALUE_FILESTORAGECONTAINERTYPEAPPPERMISSION
)

func (i FileStorageContainerTypeAppPermission) String() string {
    return []string{"none", "readContent", "writeContent", "manageContent", "create", "delete", "read", "write", "enumeratePermissions", "addPermissions", "updatePermissions", "deletePermissions", "deleteOwnPermission", "managePermissions", "full", "unknownFutureValue"}[i]
}
func ParseFileStorageContainerTypeAppPermission(v string) (any, error) {
    result := NONE_FILESTORAGECONTAINERTYPEAPPPERMISSION
    switch v {
        case "none":
            result = NONE_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "readContent":
            result = READCONTENT_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "writeContent":
            result = WRITECONTENT_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "manageContent":
            result = MANAGECONTENT_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "create":
            result = CREATE_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "delete":
            result = DELETE_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "read":
            result = READ_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "write":
            result = WRITE_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "enumeratePermissions":
            result = ENUMERATEPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "addPermissions":
            result = ADDPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "updatePermissions":
            result = UPDATEPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "deletePermissions":
            result = DELETEPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "deleteOwnPermission":
            result = DELETEOWNPERMISSION_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "managePermissions":
            result = MANAGEPERMISSIONS_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "full":
            result = FULL_FILESTORAGECONTAINERTYPEAPPPERMISSION
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_FILESTORAGECONTAINERTYPEAPPPERMISSION
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeFileStorageContainerTypeAppPermission(values []FileStorageContainerTypeAppPermission) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i FileStorageContainerTypeAppPermission) isMultiValue() bool {
    return false
}
