// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e "github.com/microsoft/kiota-abstractions-go/store"
)

type FileStorageContainerTypeSettings struct {
    // Stores model information.
    backingStore ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore
}
// NewFileStorageContainerTypeSettings instantiates a new FileStorageContainerTypeSettings and sets the default values.
func NewFileStorageContainerTypeSettings()(*FileStorageContainerTypeSettings) {
    m := &FileStorageContainerTypeSettings{
    }
    m.backingStore = ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStoreFactoryInstance();
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateFileStorageContainerTypeSettingsFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateFileStorageContainerTypeSettingsFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewFileStorageContainerTypeSettings(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *FileStorageContainerTypeSettings) GetAdditionalData()(map[string]any) {
    val , err :=  m.backingStore.Get("additionalData")
    if err != nil {
        panic(err)
    }
    if val == nil {
        var value = make(map[string]any);
        m.SetAdditionalData(value);
    }
    return val.(map[string]any)
}
// GetBackingStore gets the BackingStore property value. Stores model information.
// returns a BackingStore when successful
func (m *FileStorageContainerTypeSettings) GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore) {
    return m.backingStore
}
// GetConsumingTenantOverridables gets the consumingTenantOverridables property value. The consumingTenantOverridables property
// returns a *FileStorageContainerTypeSettingsOverride when successful
func (m *FileStorageContainerTypeSettings) GetConsumingTenantOverridables()(*FileStorageContainerTypeSettingsOverride) {
    val, err := m.GetBackingStore().Get("consumingTenantOverridables")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*FileStorageContainerTypeSettingsOverride)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *FileStorageContainerTypeSettings) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["consumingTenantOverridables"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseFileStorageContainerTypeSettingsOverride)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetConsumingTenantOverridables(val.(*FileStorageContainerTypeSettingsOverride))
        }
        return nil
    }
    res["isDiscoverabilityEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsDiscoverabilityEnabled(val)
        }
        return nil
    }
    res["isItemVersioningEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsItemVersioningEnabled(val)
        }
        return nil
    }
    res["isSearchEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsSearchEnabled(val)
        }
        return nil
    }
    res["isSharingRestricted"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsSharingRestricted(val)
        }
        return nil
    }
    res["itemMajorVersionLimit"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetItemMajorVersionLimit(val)
        }
        return nil
    }
    res["maxStoragePerContainerInBytes"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMaxStoragePerContainerInBytes(val)
        }
        return nil
    }
    res["@odata.type"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOdataType(val)
        }
        return nil
    }
    res["sharingCapability"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseSharingCapabilities)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSharingCapability(val.(*SharingCapabilities))
        }
        return nil
    }
    res["urlTemplate"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUrlTemplate(val)
        }
        return nil
    }
    return res
}
// GetIsDiscoverabilityEnabled gets the isDiscoverabilityEnabled property value. The isDiscoverabilityEnabled property
// returns a *bool when successful
func (m *FileStorageContainerTypeSettings) GetIsDiscoverabilityEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("isDiscoverabilityEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetIsItemVersioningEnabled gets the isItemVersioningEnabled property value. The isItemVersioningEnabled property
// returns a *bool when successful
func (m *FileStorageContainerTypeSettings) GetIsItemVersioningEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("isItemVersioningEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetIsSearchEnabled gets the isSearchEnabled property value. The isSearchEnabled property
// returns a *bool when successful
func (m *FileStorageContainerTypeSettings) GetIsSearchEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("isSearchEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetIsSharingRestricted gets the isSharingRestricted property value. The isSharingRestricted property
// returns a *bool when successful
func (m *FileStorageContainerTypeSettings) GetIsSharingRestricted()(*bool) {
    val, err := m.GetBackingStore().Get("isSharingRestricted")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetItemMajorVersionLimit gets the itemMajorVersionLimit property value. The itemMajorVersionLimit property
// returns a *int64 when successful
func (m *FileStorageContainerTypeSettings) GetItemMajorVersionLimit()(*int64) {
    val, err := m.GetBackingStore().Get("itemMajorVersionLimit")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int64)
    }
    return nil
}
// GetMaxStoragePerContainerInBytes gets the maxStoragePerContainerInBytes property value. The maxStoragePerContainerInBytes property
// returns a *int64 when successful
func (m *FileStorageContainerTypeSettings) GetMaxStoragePerContainerInBytes()(*int64) {
    val, err := m.GetBackingStore().Get("maxStoragePerContainerInBytes")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*int64)
    }
    return nil
}
// GetOdataType gets the @odata.type property value. The OdataType property
// returns a *string when successful
func (m *FileStorageContainerTypeSettings) GetOdataType()(*string) {
    val, err := m.GetBackingStore().Get("odataType")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetSharingCapability gets the sharingCapability property value. The sharingCapability property
// returns a *SharingCapabilities when successful
func (m *FileStorageContainerTypeSettings) GetSharingCapability()(*SharingCapabilities) {
    val, err := m.GetBackingStore().Get("sharingCapability")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*SharingCapabilities)
    }
    return nil
}
// GetUrlTemplate gets the urlTemplate property value. The urlTemplate property
// returns a *string when successful
func (m *FileStorageContainerTypeSettings) GetUrlTemplate()(*string) {
    val, err := m.GetBackingStore().Get("urlTemplate")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// Serialize serializes information the current object
func (m *FileStorageContainerTypeSettings) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    if m.GetConsumingTenantOverridables() != nil {
        cast := (*m.GetConsumingTenantOverridables()).String()
        err := writer.WriteStringValue("consumingTenantOverridables", &cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("isDiscoverabilityEnabled", m.GetIsDiscoverabilityEnabled())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("isItemVersioningEnabled", m.GetIsItemVersioningEnabled())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("isSearchEnabled", m.GetIsSearchEnabled())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("isSharingRestricted", m.GetIsSharingRestricted())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt64Value("itemMajorVersionLimit", m.GetItemMajorVersionLimit())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt64Value("maxStoragePerContainerInBytes", m.GetMaxStoragePerContainerInBytes())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("@odata.type", m.GetOdataType())
        if err != nil {
            return err
        }
    }
    if m.GetSharingCapability() != nil {
        cast := (*m.GetSharingCapability()).String()
        err := writer.WriteStringValue("sharingCapability", &cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("urlTemplate", m.GetUrlTemplate())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *FileStorageContainerTypeSettings) SetAdditionalData(value map[string]any)() {
    err := m.GetBackingStore().Set("additionalData", value)
    if err != nil {
        panic(err)
    }
}
// SetBackingStore sets the BackingStore property value. Stores model information.
func (m *FileStorageContainerTypeSettings) SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)() {
    m.backingStore = value
}
// SetConsumingTenantOverridables sets the consumingTenantOverridables property value. The consumingTenantOverridables property
func (m *FileStorageContainerTypeSettings) SetConsumingTenantOverridables(value *FileStorageContainerTypeSettingsOverride)() {
    err := m.GetBackingStore().Set("consumingTenantOverridables", value)
    if err != nil {
        panic(err)
    }
}
// SetIsDiscoverabilityEnabled sets the isDiscoverabilityEnabled property value. The isDiscoverabilityEnabled property
func (m *FileStorageContainerTypeSettings) SetIsDiscoverabilityEnabled(value *bool)() {
    err := m.GetBackingStore().Set("isDiscoverabilityEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetIsItemVersioningEnabled sets the isItemVersioningEnabled property value. The isItemVersioningEnabled property
func (m *FileStorageContainerTypeSettings) SetIsItemVersioningEnabled(value *bool)() {
    err := m.GetBackingStore().Set("isItemVersioningEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetIsSearchEnabled sets the isSearchEnabled property value. The isSearchEnabled property
func (m *FileStorageContainerTypeSettings) SetIsSearchEnabled(value *bool)() {
    err := m.GetBackingStore().Set("isSearchEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetIsSharingRestricted sets the isSharingRestricted property value. The isSharingRestricted property
func (m *FileStorageContainerTypeSettings) SetIsSharingRestricted(value *bool)() {
    err := m.GetBackingStore().Set("isSharingRestricted", value)
    if err != nil {
        panic(err)
    }
}
// SetItemMajorVersionLimit sets the itemMajorVersionLimit property value. The itemMajorVersionLimit property
func (m *FileStorageContainerTypeSettings) SetItemMajorVersionLimit(value *int64)() {
    err := m.GetBackingStore().Set("itemMajorVersionLimit", value)
    if err != nil {
        panic(err)
    }
}
// SetMaxStoragePerContainerInBytes sets the maxStoragePerContainerInBytes property value. The maxStoragePerContainerInBytes property
func (m *FileStorageContainerTypeSettings) SetMaxStoragePerContainerInBytes(value *int64)() {
    err := m.GetBackingStore().Set("maxStoragePerContainerInBytes", value)
    if err != nil {
        panic(err)
    }
}
// SetOdataType sets the @odata.type property value. The OdataType property
func (m *FileStorageContainerTypeSettings) SetOdataType(value *string)() {
    err := m.GetBackingStore().Set("odataType", value)
    if err != nil {
        panic(err)
    }
}
// SetSharingCapability sets the sharingCapability property value. The sharingCapability property
func (m *FileStorageContainerTypeSettings) SetSharingCapability(value *SharingCapabilities)() {
    err := m.GetBackingStore().Set("sharingCapability", value)
    if err != nil {
        panic(err)
    }
}
// SetUrlTemplate sets the urlTemplate property value. The urlTemplate property
func (m *FileStorageContainerTypeSettings) SetUrlTemplate(value *string)() {
    err := m.GetBackingStore().Set("urlTemplate", value)
    if err != nil {
        panic(err)
    }
}
type FileStorageContainerTypeSettingsable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackedModel
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)
    GetConsumingTenantOverridables()(*FileStorageContainerTypeSettingsOverride)
    GetIsDiscoverabilityEnabled()(*bool)
    GetIsItemVersioningEnabled()(*bool)
    GetIsSearchEnabled()(*bool)
    GetIsSharingRestricted()(*bool)
    GetItemMajorVersionLimit()(*int64)
    GetMaxStoragePerContainerInBytes()(*int64)
    GetOdataType()(*string)
    GetSharingCapability()(*SharingCapabilities)
    GetUrlTemplate()(*string)
    SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)()
    SetConsumingTenantOverridables(value *FileStorageContainerTypeSettingsOverride)()
    SetIsDiscoverabilityEnabled(value *bool)()
    SetIsItemVersioningEnabled(value *bool)()
    SetIsSearchEnabled(value *bool)()
    SetIsSharingRestricted(value *bool)()
    SetItemMajorVersionLimit(value *int64)()
    SetMaxStoragePerContainerInBytes(value *int64)()
    SetOdataType(value *string)()
    SetSharingCapability(value *SharingCapabilities)()
    SetUrlTemplate(value *string)()
}
