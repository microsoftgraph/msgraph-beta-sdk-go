// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package security

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be "github.com/microsoftgraph/msgraph-beta-sdk-go/models"
)

type IdentityAccounts struct {
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Entity
}
// NewIdentityAccounts instantiates a new IdentityAccounts and sets the default values.
func NewIdentityAccounts()(*IdentityAccounts) {
    m := &IdentityAccounts{
        Entity: *ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.NewEntity(),
    }
    return m
}
// CreateIdentityAccountsFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateIdentityAccountsFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    if parseNode != nil {
        mappingValueNode, err := parseNode.GetChildNode("@odata.type")
        if err != nil {
            return nil, err
        }
        if mappingValueNode != nil {
            mappingValue, err := mappingValueNode.GetStringValue()
            if err != nil {
                return nil, err
            }
            if mappingValue != nil {
                switch *mappingValue {
                    case "#microsoft.graph.security.user":
                        return NewUser(), nil
                }
            }
        }
    }
    return NewIdentityAccounts(), nil
}
// GetAccounts gets the accounts property value. Collection of accounts of the identity in different identity providers.
// returns a []Accountable when successful
func (m *IdentityAccounts) GetAccounts()([]Accountable) {
    val, err := m.GetBackingStore().Get("accounts")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]Accountable)
    }
    return nil
}
// GetCloudSecurityIdentifier gets the cloudSecurityIdentifier property value. The cloud security identifier of the identityAccount.
// returns a *string when successful
func (m *IdentityAccounts) GetCloudSecurityIdentifier()(*string) {
    val, err := m.GetBackingStore().Get("cloudSecurityIdentifier")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetDisplayName gets the displayName property value. The  Active Directory display name of the identityAccount.
// returns a *string when successful
func (m *IdentityAccounts) GetDisplayName()(*string) {
    val, err := m.GetBackingStore().Get("displayName")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetDomain gets the domain property value. The Active Directory domain name of the identityAccount.
// returns a *string when successful
func (m *IdentityAccounts) GetDomain()(*string) {
    val, err := m.GetBackingStore().Get("domain")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *IdentityAccounts) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["accounts"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateAccountFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]Accountable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(Accountable)
                }
            }
            m.SetAccounts(res)
        }
        return nil
    }
    res["cloudSecurityIdentifier"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCloudSecurityIdentifier(val)
        }
        return nil
    }
    res["displayName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDisplayName(val)
        }
        return nil
    }
    res["domain"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDomain(val)
        }
        return nil
    }
    res["isEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsEnabled(val)
        }
        return nil
    }
    res["onPremisesSecurityIdentifier"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOnPremisesSecurityIdentifier(val)
        }
        return nil
    }
    return res
}
// GetIsEnabled gets the isEnabled property value. Boolean indicating if the identityAccounts is enabled.
// returns a *bool when successful
func (m *IdentityAccounts) GetIsEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("isEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetOnPremisesSecurityIdentifier gets the onPremisesSecurityIdentifier property value. The on-premises security identifier of the identityAccount.
// returns a *string when successful
func (m *IdentityAccounts) GetOnPremisesSecurityIdentifier()(*string) {
    val, err := m.GetBackingStore().Get("onPremisesSecurityIdentifier")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// Serialize serializes information the current object
func (m *IdentityAccounts) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    if m.GetAccounts() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetAccounts()))
        for i, v := range m.GetAccounts() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err = writer.WriteCollectionOfObjectValues("accounts", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("cloudSecurityIdentifier", m.GetCloudSecurityIdentifier())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("displayName", m.GetDisplayName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("domain", m.GetDomain())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteBoolValue("isEnabled", m.GetIsEnabled())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("onPremisesSecurityIdentifier", m.GetOnPremisesSecurityIdentifier())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAccounts sets the accounts property value. Collection of accounts of the identity in different identity providers.
func (m *IdentityAccounts) SetAccounts(value []Accountable)() {
    err := m.GetBackingStore().Set("accounts", value)
    if err != nil {
        panic(err)
    }
}
// SetCloudSecurityIdentifier sets the cloudSecurityIdentifier property value. The cloud security identifier of the identityAccount.
func (m *IdentityAccounts) SetCloudSecurityIdentifier(value *string)() {
    err := m.GetBackingStore().Set("cloudSecurityIdentifier", value)
    if err != nil {
        panic(err)
    }
}
// SetDisplayName sets the displayName property value. The  Active Directory display name of the identityAccount.
func (m *IdentityAccounts) SetDisplayName(value *string)() {
    err := m.GetBackingStore().Set("displayName", value)
    if err != nil {
        panic(err)
    }
}
// SetDomain sets the domain property value. The Active Directory domain name of the identityAccount.
func (m *IdentityAccounts) SetDomain(value *string)() {
    err := m.GetBackingStore().Set("domain", value)
    if err != nil {
        panic(err)
    }
}
// SetIsEnabled sets the isEnabled property value. Boolean indicating if the identityAccounts is enabled.
func (m *IdentityAccounts) SetIsEnabled(value *bool)() {
    err := m.GetBackingStore().Set("isEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetOnPremisesSecurityIdentifier sets the onPremisesSecurityIdentifier property value. The on-premises security identifier of the identityAccount.
func (m *IdentityAccounts) SetOnPremisesSecurityIdentifier(value *string)() {
    err := m.GetBackingStore().Set("onPremisesSecurityIdentifier", value)
    if err != nil {
        panic(err)
    }
}
type IdentityAccountsable interface {
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Entityable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAccounts()([]Accountable)
    GetCloudSecurityIdentifier()(*string)
    GetDisplayName()(*string)
    GetDomain()(*string)
    GetIsEnabled()(*bool)
    GetOnPremisesSecurityIdentifier()(*string)
    SetAccounts(value []Accountable)()
    SetCloudSecurityIdentifier(value *string)()
    SetDisplayName(value *string)()
    SetDomain(value *string)()
    SetIsEnabled(value *bool)()
    SetOnPremisesSecurityIdentifier(value *string)()
}
