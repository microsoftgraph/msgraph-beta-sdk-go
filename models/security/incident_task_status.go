// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package security
type IncidentTaskStatus int

const (
    OPEN_INCIDENTTASKSTATUS IncidentTaskStatus = iota
    INPROGRESS_INCIDENTTASKSTATUS
    COMPLETED_INCIDENTTASKSTATUS
    FAILED_INCIDENTTASKSTATUS
    NOTRELEVANT_INCIDENTTASKSTATUS
    UNKNOWNFUTUREVALUE_INCIDENTTASKSTATUS
)

func (i IncidentTaskStatus) String() string {
    return []string{"open", "inProgress", "completed", "failed", "notRelevant", "unknownFutureValue"}[i]
}
func ParseIncidentTaskStatus(v string) (any, error) {
    result := OPEN_INCIDENTTASKSTATUS
    switch v {
        case "open":
            result = OPEN_INCIDENTTASKSTATUS
        case "inProgress":
            result = INPROGRESS_INCIDENTTASKSTATUS
        case "completed":
            result = COMPLETED_INCIDENTTASKSTATUS
        case "failed":
            result = FAILED_INCIDENTTASKSTATUS
        case "notRelevant":
            result = NOTRELEVANT_INCIDENTTASKSTATUS
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_INCIDENTTASKSTATUS
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeIncidentTaskStatus(values []IncidentTaskStatus) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i IncidentTaskStatus) isMultiValue() bool {
    return false
}
