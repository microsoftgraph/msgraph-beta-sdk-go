// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
import (
    "math"
    "strings"
)
type FileStorageContainerTypeSettingsOverride int

const (
    URLTEMPLATE_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE = 1
    ISDISCOVERABILITYENABLED_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE = 2
    ISSEARCHENABLED_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE = 4
    ISITEMVERSIONINGENABLED_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE = 8
    ITEMMAJORVERSIONLIMIT_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE = 16
    MAXSTORAGEPERCONTAINERINBYTES_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE = 32
    UNKNOWNFUTUREVALUE_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE = 64
)

func (i FileStorageContainerTypeSettingsOverride) String() string {
    var values []string
    options := []string{"urlTemplate", "isDiscoverabilityEnabled", "isSearchEnabled", "isItemVersioningEnabled", "itemMajorVersionLimit", "maxStoragePerContainerInBytes", "unknownFutureValue"}
    for p := 0; p < 7; p++ {
        mantis := FileStorageContainerTypeSettingsOverride(int(math.Pow(2, float64(p))))
        if i&mantis == mantis {
            values = append(values, options[p])
        }
    }
    return strings.Join(values, ",")
}
func ParseFileStorageContainerTypeSettingsOverride(v string) (any, error) {
    var result FileStorageContainerTypeSettingsOverride
    values := strings.Split(v, ",")
    for _, str := range values {
        switch str {
            case "urlTemplate":
                result |= URLTEMPLATE_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE
            case "isDiscoverabilityEnabled":
                result |= ISDISCOVERABILITYENABLED_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE
            case "isSearchEnabled":
                result |= ISSEARCHENABLED_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE
            case "isItemVersioningEnabled":
                result |= ISITEMVERSIONINGENABLED_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE
            case "itemMajorVersionLimit":
                result |= ITEMMAJORVERSIONLIMIT_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE
            case "maxStoragePerContainerInBytes":
                result |= MAXSTORAGEPERCONTAINERINBYTES_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE
            case "unknownFutureValue":
                result |= UNKNOWNFUTUREVALUE_FILESTORAGECONTAINERTYPESETTINGSOVERRIDE
            default:
                return nil, nil
        }
    }
    return &result, nil
}
func SerializeFileStorageContainerTypeSettingsOverride(values []FileStorageContainerTypeSettingsOverride) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i FileStorageContainerTypeSettingsOverride) isMultiValue() bool {
    return true
}
