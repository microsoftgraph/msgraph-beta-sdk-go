// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type UnifiedRbacApplicationMultiple struct {
    RbacApplicationMultiple
}
// NewUnifiedRbacApplicationMultiple instantiates a new UnifiedRbacApplicationMultiple and sets the default values.
func NewUnifiedRbacApplicationMultiple()(*UnifiedRbacApplicationMultiple) {
    m := &UnifiedRbacApplicationMultiple{
        RbacApplicationMultiple: *NewRbacApplicationMultiple(),
    }
    odataTypeValue := "#microsoft.graph.unifiedRbacApplicationMultiple"
    m.SetOdataType(&odataTypeValue)
    return m
}
// CreateUnifiedRbacApplicationMultipleFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateUnifiedRbacApplicationMultipleFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewUnifiedRbacApplicationMultiple(), nil
}
// GetCustomAppScopes gets the customAppScopes property value. Represents the resources that the principal has been granted access.
// returns a []CustomAppScopeable when successful
func (m *UnifiedRbacApplicationMultiple) GetCustomAppScopes()([]CustomAppScopeable) {
    val, err := m.GetBackingStore().Get("customAppScopes")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]CustomAppScopeable)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *UnifiedRbacApplicationMultiple) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.RbacApplicationMultiple.GetFieldDeserializers()
    res["customAppScopes"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateCustomAppScopeFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]CustomAppScopeable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(CustomAppScopeable)
                }
            }
            m.SetCustomAppScopes(res)
        }
        return nil
    }
    return res
}
// Serialize serializes information the current object
func (m *UnifiedRbacApplicationMultiple) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.RbacApplicationMultiple.Serialize(writer)
    if err != nil {
        return err
    }
    if m.GetCustomAppScopes() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetCustomAppScopes()))
        for i, v := range m.GetCustomAppScopes() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err = writer.WriteCollectionOfObjectValues("customAppScopes", cast)
        if err != nil {
            return err
        }
    }
    return nil
}
// SetCustomAppScopes sets the customAppScopes property value. Represents the resources that the principal has been granted access.
func (m *UnifiedRbacApplicationMultiple) SetCustomAppScopes(value []CustomAppScopeable)() {
    err := m.GetBackingStore().Set("customAppScopes", value)
    if err != nil {
        panic(err)
    }
}
type UnifiedRbacApplicationMultipleable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    RbacApplicationMultipleable
    GetCustomAppScopes()([]CustomAppScopeable)
    SetCustomAppScopes(value []CustomAppScopeable)()
}
