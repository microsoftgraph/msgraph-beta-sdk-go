// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type OrganizationAllowedAudiences int

const (
    ME_ORGANIZATIONALLOWEDAUDIENCES OrganizationAllowedAudiences = iota
    ORGANIZATION_ORGANIZATIONALLOWEDAUDIENCES
    FEDERATEDORGANIZATIONS_ORGANIZATIONALLOWEDAUDIENCES
    EVERYONE_ORGANIZATIONALLOWEDAUDIENCES
    UNKNOWNFUTUREVALUE_ORGANIZATIONALLOWEDAUDIENCES
)

func (i OrganizationAllowedAudiences) String() string {
    return []string{"me", "organization", "federatedOrganizations", "everyone", "unknownFutureValue"}[i]
}
func ParseOrganizationAllowedAudiences(v string) (any, error) {
    result := ME_ORGANIZATIONALLOWEDAUDIENCES
    switch v {
        case "me":
            result = ME_ORGANIZATIONALLOWEDAUDIENCES
        case "organization":
            result = ORGANIZATION_ORGANIZATIONALLOWEDAUDIENCES
        case "federatedOrganizations":
            result = FEDERATEDORGANIZATIONS_ORGANIZATIONALLOWEDAUDIENCES
        case "everyone":
            result = EVERYONE_ORGANIZATIONALLOWEDAUDIENCES
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_ORGANIZATIONALLOWEDAUDIENCES
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeOrganizationAllowedAudiences(values []OrganizationAllowedAudiences) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i OrganizationAllowedAudiences) isMultiValue() bool {
    return false
}
