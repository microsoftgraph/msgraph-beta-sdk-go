// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package teamsadministration

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be "github.com/microsoftgraph/msgraph-beta-sdk-go/models"
)

type TeamsUserConfiguration struct {
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Entity
}
// NewTeamsUserConfiguration instantiates a new TeamsUserConfiguration and sets the default values.
func NewTeamsUserConfiguration()(*TeamsUserConfiguration) {
    m := &TeamsUserConfiguration{
        Entity: *ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.NewEntity(),
    }
    return m
}
// CreateTeamsUserConfigurationFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateTeamsUserConfigurationFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewTeamsUserConfiguration(), nil
}
// GetAccountType gets the accountType property value. The type of the account in the Teams context. The possible values are: user, resourceAccount, guest, sfbOnPremUser, unknown, unknownFutureValue, ineligibleUser. Use the Prefer: include-unknown-enum-members request header to get the following value from this enum evolvable enum: ineligibleUser.
// returns a *AccountType when successful
func (m *TeamsUserConfiguration) GetAccountType()(*AccountType) {
    val, err := m.GetBackingStore().Get("accountType")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*AccountType)
    }
    return nil
}
// GetCreatedDateTime gets the createdDateTime property value. The date and time when the user was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
// returns a *Time when successful
func (m *TeamsUserConfiguration) GetCreatedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    val, err := m.GetBackingStore().Get("createdDateTime")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    }
    return nil
}
// GetEffectivePolicyAssignments gets the effectivePolicyAssignments property value. Contains the user's effective policy assignments, with each assignment including policyType and policyAssignment details.
// returns a []EffectivePolicyAssignmentable when successful
func (m *TeamsUserConfiguration) GetEffectivePolicyAssignments()([]EffectivePolicyAssignmentable) {
    val, err := m.GetBackingStore().Get("effectivePolicyAssignments")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]EffectivePolicyAssignmentable)
    }
    return nil
}
// GetFeatureTypes gets the featureTypes property value. The Teams features enabled for a given user based on licensing or service plan.
// returns a []string when successful
func (m *TeamsUserConfiguration) GetFeatureTypes()([]string) {
    val, err := m.GetBackingStore().Get("featureTypes")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]string)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *TeamsUserConfiguration) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["accountType"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseAccountType)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAccountType(val.(*AccountType))
        }
        return nil
    }
    res["createdDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCreatedDateTime(val)
        }
        return nil
    }
    res["effectivePolicyAssignments"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateEffectivePolicyAssignmentFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]EffectivePolicyAssignmentable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(EffectivePolicyAssignmentable)
                }
            }
            m.SetEffectivePolicyAssignments(res)
        }
        return nil
    }
    res["featureTypes"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = *(v.(*string))
                }
            }
            m.SetFeatureTypes(res)
        }
        return nil
    }
    res["isEnterpriseVoiceEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsEnterpriseVoiceEnabled(val)
        }
        return nil
    }
    res["modifiedDateTime"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetModifiedDateTime(val)
        }
        return nil
    }
    res["telephoneNumbers"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateAssignedTelephoneNumberFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]AssignedTelephoneNumberable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(AssignedTelephoneNumberable)
                }
            }
            m.SetTelephoneNumbers(res)
        }
        return nil
    }
    res["tenantId"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTenantId(val)
        }
        return nil
    }
    res["user"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.CreateUserFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUser(val.(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Userable))
        }
        return nil
    }
    res["userPrincipalName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUserPrincipalName(val)
        }
        return nil
    }
    return res
}
// GetIsEnterpriseVoiceEnabled gets the isEnterpriseVoiceEnabled property value. Indicates whether voice capability is enabled.
// returns a *bool when successful
func (m *TeamsUserConfiguration) GetIsEnterpriseVoiceEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("isEnterpriseVoiceEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetModifiedDateTime gets the modifiedDateTime property value. The date and time when the user's details were last modified. The system updates this value each time the user's details are changed. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
// returns a *Time when successful
func (m *TeamsUserConfiguration) GetModifiedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    val, err := m.GetBackingStore().Get("modifiedDateTime")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    }
    return nil
}
// GetTelephoneNumbers gets the telephoneNumbers property value. Includes both the phone number and its corresponding assignment category. The assignment category can include values such as primary, private, and alternate.
// returns a []AssignedTelephoneNumberable when successful
func (m *TeamsUserConfiguration) GetTelephoneNumbers()([]AssignedTelephoneNumberable) {
    val, err := m.GetBackingStore().Get("telephoneNumbers")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]AssignedTelephoneNumberable)
    }
    return nil
}
// GetTenantId gets the tenantId property value. The unique identifier of the tenant in Entra to which this user is assigned.
// returns a *string when successful
func (m *TeamsUserConfiguration) GetTenantId()(*string) {
    val, err := m.GetBackingStore().Get("tenantId")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// GetUser gets the user property value. Represents an Entra user account.
// returns a Userable when successful
func (m *TeamsUserConfiguration) GetUser()(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Userable) {
    val, err := m.GetBackingStore().Get("user")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Userable)
    }
    return nil
}
// GetUserPrincipalName gets the userPrincipalName property value. The sign-in address of the user.
// returns a *string when successful
func (m *TeamsUserConfiguration) GetUserPrincipalName()(*string) {
    val, err := m.GetBackingStore().Get("userPrincipalName")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// Serialize serializes information the current object
func (m *TeamsUserConfiguration) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    if m.GetAccountType() != nil {
        cast := (*m.GetAccountType()).String()
        err = writer.WriteStringValue("accountType", &cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("createdDateTime", m.GetCreatedDateTime())
        if err != nil {
            return err
        }
    }
    if m.GetEffectivePolicyAssignments() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetEffectivePolicyAssignments()))
        for i, v := range m.GetEffectivePolicyAssignments() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err = writer.WriteCollectionOfObjectValues("effectivePolicyAssignments", cast)
        if err != nil {
            return err
        }
    }
    if m.GetFeatureTypes() != nil {
        err = writer.WriteCollectionOfStringValues("featureTypes", m.GetFeatureTypes())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteBoolValue("isEnterpriseVoiceEnabled", m.GetIsEnterpriseVoiceEnabled())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("modifiedDateTime", m.GetModifiedDateTime())
        if err != nil {
            return err
        }
    }
    if m.GetTelephoneNumbers() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetTelephoneNumbers()))
        for i, v := range m.GetTelephoneNumbers() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err = writer.WriteCollectionOfObjectValues("telephoneNumbers", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("tenantId", m.GetTenantId())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteObjectValue("user", m.GetUser())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("userPrincipalName", m.GetUserPrincipalName())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAccountType sets the accountType property value. The type of the account in the Teams context. The possible values are: user, resourceAccount, guest, sfbOnPremUser, unknown, unknownFutureValue, ineligibleUser. Use the Prefer: include-unknown-enum-members request header to get the following value from this enum evolvable enum: ineligibleUser.
func (m *TeamsUserConfiguration) SetAccountType(value *AccountType)() {
    err := m.GetBackingStore().Set("accountType", value)
    if err != nil {
        panic(err)
    }
}
// SetCreatedDateTime sets the createdDateTime property value. The date and time when the user was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
func (m *TeamsUserConfiguration) SetCreatedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    err := m.GetBackingStore().Set("createdDateTime", value)
    if err != nil {
        panic(err)
    }
}
// SetEffectivePolicyAssignments sets the effectivePolicyAssignments property value. Contains the user's effective policy assignments, with each assignment including policyType and policyAssignment details.
func (m *TeamsUserConfiguration) SetEffectivePolicyAssignments(value []EffectivePolicyAssignmentable)() {
    err := m.GetBackingStore().Set("effectivePolicyAssignments", value)
    if err != nil {
        panic(err)
    }
}
// SetFeatureTypes sets the featureTypes property value. The Teams features enabled for a given user based on licensing or service plan.
func (m *TeamsUserConfiguration) SetFeatureTypes(value []string)() {
    err := m.GetBackingStore().Set("featureTypes", value)
    if err != nil {
        panic(err)
    }
}
// SetIsEnterpriseVoiceEnabled sets the isEnterpriseVoiceEnabled property value. Indicates whether voice capability is enabled.
func (m *TeamsUserConfiguration) SetIsEnterpriseVoiceEnabled(value *bool)() {
    err := m.GetBackingStore().Set("isEnterpriseVoiceEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetModifiedDateTime sets the modifiedDateTime property value. The date and time when the user's details were last modified. The system updates this value each time the user's details are changed. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
func (m *TeamsUserConfiguration) SetModifiedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    err := m.GetBackingStore().Set("modifiedDateTime", value)
    if err != nil {
        panic(err)
    }
}
// SetTelephoneNumbers sets the telephoneNumbers property value. Includes both the phone number and its corresponding assignment category. The assignment category can include values such as primary, private, and alternate.
func (m *TeamsUserConfiguration) SetTelephoneNumbers(value []AssignedTelephoneNumberable)() {
    err := m.GetBackingStore().Set("telephoneNumbers", value)
    if err != nil {
        panic(err)
    }
}
// SetTenantId sets the tenantId property value. The unique identifier of the tenant in Entra to which this user is assigned.
func (m *TeamsUserConfiguration) SetTenantId(value *string)() {
    err := m.GetBackingStore().Set("tenantId", value)
    if err != nil {
        panic(err)
    }
}
// SetUser sets the user property value. Represents an Entra user account.
func (m *TeamsUserConfiguration) SetUser(value ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Userable)() {
    err := m.GetBackingStore().Set("user", value)
    if err != nil {
        panic(err)
    }
}
// SetUserPrincipalName sets the userPrincipalName property value. The sign-in address of the user.
func (m *TeamsUserConfiguration) SetUserPrincipalName(value *string)() {
    err := m.GetBackingStore().Set("userPrincipalName", value)
    if err != nil {
        panic(err)
    }
}
type TeamsUserConfigurationable interface {
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Entityable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAccountType()(*AccountType)
    GetCreatedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetEffectivePolicyAssignments()([]EffectivePolicyAssignmentable)
    GetFeatureTypes()([]string)
    GetIsEnterpriseVoiceEnabled()(*bool)
    GetModifiedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)
    GetTelephoneNumbers()([]AssignedTelephoneNumberable)
    GetTenantId()(*string)
    GetUser()(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Userable)
    GetUserPrincipalName()(*string)
    SetAccountType(value *AccountType)()
    SetCreatedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetEffectivePolicyAssignments(value []EffectivePolicyAssignmentable)()
    SetFeatureTypes(value []string)()
    SetIsEnterpriseVoiceEnabled(value *bool)()
    SetModifiedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)()
    SetTelephoneNumbers(value []AssignedTelephoneNumberable)()
    SetTenantId(value *string)()
    SetUser(value ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.Userable)()
    SetUserPrincipalName(value *string)()
}
