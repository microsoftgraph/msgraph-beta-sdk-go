// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e "github.com/microsoft/kiota-abstractions-go/store"
)

// WindowsQualityUpdateCveSeverityInformation cVE information of QU catalog item
type WindowsQualityUpdateCveSeverityInformation struct {
    // Stores model information.
    backingStore ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore
}
// NewWindowsQualityUpdateCveSeverityInformation instantiates a new WindowsQualityUpdateCveSeverityInformation and sets the default values.
func NewWindowsQualityUpdateCveSeverityInformation()(*WindowsQualityUpdateCveSeverityInformation) {
    m := &WindowsQualityUpdateCveSeverityInformation{
    }
    m.backingStore = ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStoreFactoryInstance();
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateWindowsQualityUpdateCveSeverityInformationFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateWindowsQualityUpdateCveSeverityInformationFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewWindowsQualityUpdateCveSeverityInformation(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *WindowsQualityUpdateCveSeverityInformation) GetAdditionalData()(map[string]any) {
    val , err :=  m.backingStore.Get("additionalData")
    if err != nil {
        panic(err)
    }
    if val == nil {
        var value = make(map[string]any);
        m.SetAdditionalData(value);
    }
    return val.(map[string]any)
}
// GetBackingStore gets the BackingStore property value. Stores model information.
// returns a BackingStore when successful
func (m *WindowsQualityUpdateCveSeverityInformation) GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore) {
    return m.backingStore
}
// GetExploitedCves gets the exploitedCves property value. Exploit cve details
// returns a []WindowsQualityUpdateCveDetailable when successful
func (m *WindowsQualityUpdateCveSeverityInformation) GetExploitedCves()([]WindowsQualityUpdateCveDetailable) {
    val, err := m.GetBackingStore().Get("exploitedCves")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]WindowsQualityUpdateCveDetailable)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *WindowsQualityUpdateCveSeverityInformation) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["exploitedCves"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateWindowsQualityUpdateCveDetailFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]WindowsQualityUpdateCveDetailable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(WindowsQualityUpdateCveDetailable)
                }
            }
            m.SetExploitedCves(res)
        }
        return nil
    }
    res["maxBaseScore"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMaxBaseScore(val)
        }
        return nil
    }
    res["maxSeverityLevel"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseWindowsUpdateCveSeverityLevel)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMaxSeverityLevel(val.(*WindowsUpdateCveSeverityLevel))
        }
        return nil
    }
    res["@odata.type"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOdataType(val)
        }
        return nil
    }
    return res
}
// GetMaxBaseScore gets the maxBaseScore property value. Max base score of CVE
// returns a *float64 when successful
func (m *WindowsQualityUpdateCveSeverityInformation) GetMaxBaseScore()(*float64) {
    val, err := m.GetBackingStore().Get("maxBaseScore")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*float64)
    }
    return nil
}
// GetMaxSeverityLevel gets the maxSeverityLevel property value. Max severity of CVE
// returns a *WindowsUpdateCveSeverityLevel when successful
func (m *WindowsQualityUpdateCveSeverityInformation) GetMaxSeverityLevel()(*WindowsUpdateCveSeverityLevel) {
    val, err := m.GetBackingStore().Get("maxSeverityLevel")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*WindowsUpdateCveSeverityLevel)
    }
    return nil
}
// GetOdataType gets the @odata.type property value. The OdataType property
// returns a *string when successful
func (m *WindowsQualityUpdateCveSeverityInformation) GetOdataType()(*string) {
    val, err := m.GetBackingStore().Get("odataType")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// Serialize serializes information the current object
func (m *WindowsQualityUpdateCveSeverityInformation) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    if m.GetExploitedCves() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetExploitedCves()))
        for i, v := range m.GetExploitedCves() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err := writer.WriteCollectionOfObjectValues("exploitedCves", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteFloat64Value("maxBaseScore", m.GetMaxBaseScore())
        if err != nil {
            return err
        }
    }
    if m.GetMaxSeverityLevel() != nil {
        cast := (*m.GetMaxSeverityLevel()).String()
        err := writer.WriteStringValue("maxSeverityLevel", &cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("@odata.type", m.GetOdataType())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *WindowsQualityUpdateCveSeverityInformation) SetAdditionalData(value map[string]any)() {
    err := m.GetBackingStore().Set("additionalData", value)
    if err != nil {
        panic(err)
    }
}
// SetBackingStore sets the BackingStore property value. Stores model information.
func (m *WindowsQualityUpdateCveSeverityInformation) SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)() {
    m.backingStore = value
}
// SetExploitedCves sets the exploitedCves property value. Exploit cve details
func (m *WindowsQualityUpdateCveSeverityInformation) SetExploitedCves(value []WindowsQualityUpdateCveDetailable)() {
    err := m.GetBackingStore().Set("exploitedCves", value)
    if err != nil {
        panic(err)
    }
}
// SetMaxBaseScore sets the maxBaseScore property value. Max base score of CVE
func (m *WindowsQualityUpdateCveSeverityInformation) SetMaxBaseScore(value *float64)() {
    err := m.GetBackingStore().Set("maxBaseScore", value)
    if err != nil {
        panic(err)
    }
}
// SetMaxSeverityLevel sets the maxSeverityLevel property value. Max severity of CVE
func (m *WindowsQualityUpdateCveSeverityInformation) SetMaxSeverityLevel(value *WindowsUpdateCveSeverityLevel)() {
    err := m.GetBackingStore().Set("maxSeverityLevel", value)
    if err != nil {
        panic(err)
    }
}
// SetOdataType sets the @odata.type property value. The OdataType property
func (m *WindowsQualityUpdateCveSeverityInformation) SetOdataType(value *string)() {
    err := m.GetBackingStore().Set("odataType", value)
    if err != nil {
        panic(err)
    }
}
type WindowsQualityUpdateCveSeverityInformationable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackedModel
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)
    GetExploitedCves()([]WindowsQualityUpdateCveDetailable)
    GetMaxBaseScore()(*float64)
    GetMaxSeverityLevel()(*WindowsUpdateCveSeverityLevel)
    GetOdataType()(*string)
    SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)()
    SetExploitedCves(value []WindowsQualityUpdateCveDetailable)()
    SetMaxBaseScore(value *float64)()
    SetMaxSeverityLevel(value *WindowsUpdateCveSeverityLevel)()
    SetOdataType(value *string)()
}
