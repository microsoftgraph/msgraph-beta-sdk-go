// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type ConnectionType int

const (
    WEBSOCKET_CONNECTIONTYPE ConnectionType = iota
    UNKNOWNFUTUREVALUE_CONNECTIONTYPE
)

func (i ConnectionType) String() string {
    return []string{"webSocket", "unknownFutureValue"}[i]
}
func ParseConnectionType(v string) (any, error) {
    result := WEBSOCKET_CONNECTIONTYPE
    switch v {
        case "webSocket":
            result = WEBSOCKET_CONNECTIONTYPE
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_CONNECTIONTYPE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeConnectionType(values []ConnectionType) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i ConnectionType) isMultiValue() bool {
    return false
}
