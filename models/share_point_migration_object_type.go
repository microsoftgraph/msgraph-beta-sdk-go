// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type SharePointMigrationObjectType int

const (
    SITE_SHAREPOINTMIGRATIONOBJECTTYPE SharePointMigrationObjectType = iota
    WEB_SHAREPOINTMIGRATIONOBJECTTYPE
    FOLDER_SHAREPOINTMIGRATIONOBJECTTYPE
    LIST_SHAREPOINTMIGRATIONOBJECTTYPE
    LISTITEM_SHAREPOINTMIGRATIONOBJECTTYPE
    FILE_SHAREPOINTMIGRATIONOBJECTTYPE
    ALERT_SHAREPOINTMIGRATIONOBJECTTYPE
    SHAREDWITHOBJECT_SHAREPOINTMIGRATIONOBJECTTYPE
    INVALID_SHAREPOINTMIGRATIONOBJECTTYPE
    UNKNOWNFUTUREVALUE_SHAREPOINTMIGRATIONOBJECTTYPE
)

func (i SharePointMigrationObjectType) String() string {
    return []string{"site", "web", "folder", "list", "listItem", "file", "alert", "sharedWithObject", "invalid", "unknownFutureValue"}[i]
}
func ParseSharePointMigrationObjectType(v string) (any, error) {
    result := SITE_SHAREPOINTMIGRATIONOBJECTTYPE
    switch v {
        case "site":
            result = SITE_SHAREPOINTMIGRATIONOBJECTTYPE
        case "web":
            result = WEB_SHAREPOINTMIGRATIONOBJECTTYPE
        case "folder":
            result = FOLDER_SHAREPOINTMIGRATIONOBJECTTYPE
        case "list":
            result = LIST_SHAREPOINTMIGRATIONOBJECTTYPE
        case "listItem":
            result = LISTITEM_SHAREPOINTMIGRATIONOBJECTTYPE
        case "file":
            result = FILE_SHAREPOINTMIGRATIONOBJECTTYPE
        case "alert":
            result = ALERT_SHAREPOINTMIGRATIONOBJECTTYPE
        case "sharedWithObject":
            result = SHAREDWITHOBJECT_SHAREPOINTMIGRATIONOBJECTTYPE
        case "invalid":
            result = INVALID_SHAREPOINTMIGRATIONOBJECTTYPE
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_SHAREPOINTMIGRATIONOBJECTTYPE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeSharePointMigrationObjectType(values []SharePointMigrationObjectType) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i SharePointMigrationObjectType) isMultiValue() bool {
    return false
}
