// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type DeviceManagementConfigurationFloatSettingValueDefinition struct {
    DeviceManagementConfigurationSettingValueDefinition
}
// NewDeviceManagementConfigurationFloatSettingValueDefinition instantiates a new DeviceManagementConfigurationFloatSettingValueDefinition and sets the default values.
func NewDeviceManagementConfigurationFloatSettingValueDefinition()(*DeviceManagementConfigurationFloatSettingValueDefinition) {
    m := &DeviceManagementConfigurationFloatSettingValueDefinition{
        DeviceManagementConfigurationSettingValueDefinition: *NewDeviceManagementConfigurationSettingValueDefinition(),
    }
    odataTypeValue := "#microsoft.graph.deviceManagementConfigurationFloatSettingValueDefinition"
    m.SetOdataType(&odataTypeValue)
    return m
}
// CreateDeviceManagementConfigurationFloatSettingValueDefinitionFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateDeviceManagementConfigurationFloatSettingValueDefinitionFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewDeviceManagementConfigurationFloatSettingValueDefinition(), nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *DeviceManagementConfigurationFloatSettingValueDefinition) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.DeviceManagementConfigurationSettingValueDefinition.GetFieldDeserializers()
    res["maximumValue"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMaximumValue(val)
        }
        return nil
    }
    res["minimumValue"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetFloat64Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetMinimumValue(val)
        }
        return nil
    }
    return res
}
// GetMaximumValue gets the maximumValue property value. Maximum allowed value of the float(double)
// returns a *float64 when successful
func (m *DeviceManagementConfigurationFloatSettingValueDefinition) GetMaximumValue()(*float64) {
    val, err := m.GetBackingStore().Get("maximumValue")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*float64)
    }
    return nil
}
// GetMinimumValue gets the minimumValue property value. Minimum allowed value of the float
// returns a *float64 when successful
func (m *DeviceManagementConfigurationFloatSettingValueDefinition) GetMinimumValue()(*float64) {
    val, err := m.GetBackingStore().Get("minimumValue")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*float64)
    }
    return nil
}
// Serialize serializes information the current object
func (m *DeviceManagementConfigurationFloatSettingValueDefinition) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.DeviceManagementConfigurationSettingValueDefinition.Serialize(writer)
    if err != nil {
        return err
    }
    {
        err = writer.WriteFloat64Value("maximumValue", m.GetMaximumValue())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteFloat64Value("minimumValue", m.GetMinimumValue())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetMaximumValue sets the maximumValue property value. Maximum allowed value of the float(double)
func (m *DeviceManagementConfigurationFloatSettingValueDefinition) SetMaximumValue(value *float64)() {
    err := m.GetBackingStore().Set("maximumValue", value)
    if err != nil {
        panic(err)
    }
}
// SetMinimumValue sets the minimumValue property value. Minimum allowed value of the float
func (m *DeviceManagementConfigurationFloatSettingValueDefinition) SetMinimumValue(value *float64)() {
    err := m.GetBackingStore().Set("minimumValue", value)
    if err != nil {
        panic(err)
    }
}
type DeviceManagementConfigurationFloatSettingValueDefinitionable interface {
    DeviceManagementConfigurationSettingValueDefinitionable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetMaximumValue()(*float64)
    GetMinimumValue()(*float64)
    SetMaximumValue(value *float64)()
    SetMinimumValue(value *float64)()
}
