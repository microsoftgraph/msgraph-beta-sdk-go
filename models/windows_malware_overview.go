package models

import (
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

// WindowsMalwareOverview windows device malware overview.
type WindowsMalwareOverview struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]interface{}
    // Count of devices per malware category
    malwareCategorySummary []WindowsMalwareCategoryCountable
    // Count of devices with malware detected in the last 30 days
    malwareDetectedDeviceCount *int32
    // Count of devices per malware execution state
    malwareExecutionStateSummary []WindowsMalwareExecutionStateCountable
    // Count of devices per malware
    malwareNameSummary []WindowsMalwareNameCountable
    // Count of active malware per malware severity
    malwareSeveritySummary []WindowsMalwareSeverityCountable
    // Count of devices per malware state
    malwareStateSummary []WindowsMalwareStateCountable
    // The OdataType property
    odataType *string
    // Count of devices with malware per windows OS version
    osVersionsSummary []OsVersionCountable
    // Count of all distinct malwares detected across all devices. Valid values -2147483648 to 2147483647
    totalDistinctMalwareCount *int32
    // Count of all malware detections across all devices. Valid values -2147483648 to 2147483647
    totalMalwareCount *int32
}
// NewWindowsMalwareOverview instantiates a new windowsMalwareOverview and sets the default values.
func NewWindowsMalwareOverview()(*WindowsMalwareOverview) {
    m := &WindowsMalwareOverview{
    }
    m.SetAdditionalData(make(map[string]interface{}));
    odataTypeValue := "#microsoft.graph.windowsMalwareOverview";
    m.SetOdataType(&odataTypeValue);
    return m
}
// CreateWindowsMalwareOverviewFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
func CreateWindowsMalwareOverviewFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewWindowsMalwareOverview(), nil
}
// GetAdditionalData gets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *WindowsMalwareOverview) GetAdditionalData()(map[string]interface{}) {
    return m.additionalData
}
// GetFieldDeserializers the deserialization information for the current model
func (m *WindowsMalwareOverview) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["malwareCategorySummary"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetCollectionOfObjectValues(CreateWindowsMalwareCategoryCountFromDiscriminatorValue , m.SetMalwareCategorySummary)
    res["malwareDetectedDeviceCount"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetInt32Value(m.SetMalwareDetectedDeviceCount)
    res["malwareExecutionStateSummary"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetCollectionOfObjectValues(CreateWindowsMalwareExecutionStateCountFromDiscriminatorValue , m.SetMalwareExecutionStateSummary)
    res["malwareNameSummary"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetCollectionOfObjectValues(CreateWindowsMalwareNameCountFromDiscriminatorValue , m.SetMalwareNameSummary)
    res["malwareSeveritySummary"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetCollectionOfObjectValues(CreateWindowsMalwareSeverityCountFromDiscriminatorValue , m.SetMalwareSeveritySummary)
    res["malwareStateSummary"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetCollectionOfObjectValues(CreateWindowsMalwareStateCountFromDiscriminatorValue , m.SetMalwareStateSummary)
    res["@odata.type"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetStringValue(m.SetOdataType)
    res["osVersionsSummary"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetCollectionOfObjectValues(CreateOsVersionCountFromDiscriminatorValue , m.SetOsVersionsSummary)
    res["totalDistinctMalwareCount"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetInt32Value(m.SetTotalDistinctMalwareCount)
    res["totalMalwareCount"] = i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.SetInt32Value(m.SetTotalMalwareCount)
    return res
}
// GetMalwareCategorySummary gets the malwareCategorySummary property value. Count of devices per malware category
func (m *WindowsMalwareOverview) GetMalwareCategorySummary()([]WindowsMalwareCategoryCountable) {
    return m.malwareCategorySummary
}
// GetMalwareDetectedDeviceCount gets the malwareDetectedDeviceCount property value. Count of devices with malware detected in the last 30 days
func (m *WindowsMalwareOverview) GetMalwareDetectedDeviceCount()(*int32) {
    return m.malwareDetectedDeviceCount
}
// GetMalwareExecutionStateSummary gets the malwareExecutionStateSummary property value. Count of devices per malware execution state
func (m *WindowsMalwareOverview) GetMalwareExecutionStateSummary()([]WindowsMalwareExecutionStateCountable) {
    return m.malwareExecutionStateSummary
}
// GetMalwareNameSummary gets the malwareNameSummary property value. Count of devices per malware
func (m *WindowsMalwareOverview) GetMalwareNameSummary()([]WindowsMalwareNameCountable) {
    return m.malwareNameSummary
}
// GetMalwareSeveritySummary gets the malwareSeveritySummary property value. Count of active malware per malware severity
func (m *WindowsMalwareOverview) GetMalwareSeveritySummary()([]WindowsMalwareSeverityCountable) {
    return m.malwareSeveritySummary
}
// GetMalwareStateSummary gets the malwareStateSummary property value. Count of devices per malware state
func (m *WindowsMalwareOverview) GetMalwareStateSummary()([]WindowsMalwareStateCountable) {
    return m.malwareStateSummary
}
// GetOdataType gets the @odata.type property value. The OdataType property
func (m *WindowsMalwareOverview) GetOdataType()(*string) {
    return m.odataType
}
// GetOsVersionsSummary gets the osVersionsSummary property value. Count of devices with malware per windows OS version
func (m *WindowsMalwareOverview) GetOsVersionsSummary()([]OsVersionCountable) {
    return m.osVersionsSummary
}
// GetTotalDistinctMalwareCount gets the totalDistinctMalwareCount property value. Count of all distinct malwares detected across all devices. Valid values -2147483648 to 2147483647
func (m *WindowsMalwareOverview) GetTotalDistinctMalwareCount()(*int32) {
    return m.totalDistinctMalwareCount
}
// GetTotalMalwareCount gets the totalMalwareCount property value. Count of all malware detections across all devices. Valid values -2147483648 to 2147483647
func (m *WindowsMalwareOverview) GetTotalMalwareCount()(*int32) {
    return m.totalMalwareCount
}
// Serialize serializes information the current object
func (m *WindowsMalwareOverview) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    if m.GetMalwareCategorySummary() != nil {
        cast := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.CollectionCast[i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable](m.GetMalwareCategorySummary())
        err := writer.WriteCollectionOfObjectValues("malwareCategorySummary", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("malwareDetectedDeviceCount", m.GetMalwareDetectedDeviceCount())
        if err != nil {
            return err
        }
    }
    if m.GetMalwareExecutionStateSummary() != nil {
        cast := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.CollectionCast[i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable](m.GetMalwareExecutionStateSummary())
        err := writer.WriteCollectionOfObjectValues("malwareExecutionStateSummary", cast)
        if err != nil {
            return err
        }
    }
    if m.GetMalwareNameSummary() != nil {
        cast := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.CollectionCast[i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable](m.GetMalwareNameSummary())
        err := writer.WriteCollectionOfObjectValues("malwareNameSummary", cast)
        if err != nil {
            return err
        }
    }
    if m.GetMalwareSeveritySummary() != nil {
        cast := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.CollectionCast[i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable](m.GetMalwareSeveritySummary())
        err := writer.WriteCollectionOfObjectValues("malwareSeveritySummary", cast)
        if err != nil {
            return err
        }
    }
    if m.GetMalwareStateSummary() != nil {
        cast := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.CollectionCast[i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable](m.GetMalwareStateSummary())
        err := writer.WriteCollectionOfObjectValues("malwareStateSummary", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("@odata.type", m.GetOdataType())
        if err != nil {
            return err
        }
    }
    if m.GetOsVersionsSummary() != nil {
        cast := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.CollectionCast[i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable](m.GetOsVersionsSummary())
        err := writer.WriteCollectionOfObjectValues("osVersionsSummary", cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("totalDistinctMalwareCount", m.GetTotalDistinctMalwareCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteInt32Value("totalMalwareCount", m.GetTotalMalwareCount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *WindowsMalwareOverview) SetAdditionalData(value map[string]interface{})() {
    m.additionalData = value
}
// SetMalwareCategorySummary sets the malwareCategorySummary property value. Count of devices per malware category
func (m *WindowsMalwareOverview) SetMalwareCategorySummary(value []WindowsMalwareCategoryCountable)() {
    m.malwareCategorySummary = value
}
// SetMalwareDetectedDeviceCount sets the malwareDetectedDeviceCount property value. Count of devices with malware detected in the last 30 days
func (m *WindowsMalwareOverview) SetMalwareDetectedDeviceCount(value *int32)() {
    m.malwareDetectedDeviceCount = value
}
// SetMalwareExecutionStateSummary sets the malwareExecutionStateSummary property value. Count of devices per malware execution state
func (m *WindowsMalwareOverview) SetMalwareExecutionStateSummary(value []WindowsMalwareExecutionStateCountable)() {
    m.malwareExecutionStateSummary = value
}
// SetMalwareNameSummary sets the malwareNameSummary property value. Count of devices per malware
func (m *WindowsMalwareOverview) SetMalwareNameSummary(value []WindowsMalwareNameCountable)() {
    m.malwareNameSummary = value
}
// SetMalwareSeveritySummary sets the malwareSeveritySummary property value. Count of active malware per malware severity
func (m *WindowsMalwareOverview) SetMalwareSeveritySummary(value []WindowsMalwareSeverityCountable)() {
    m.malwareSeveritySummary = value
}
// SetMalwareStateSummary sets the malwareStateSummary property value. Count of devices per malware state
func (m *WindowsMalwareOverview) SetMalwareStateSummary(value []WindowsMalwareStateCountable)() {
    m.malwareStateSummary = value
}
// SetOdataType sets the @odata.type property value. The OdataType property
func (m *WindowsMalwareOverview) SetOdataType(value *string)() {
    m.odataType = value
}
// SetOsVersionsSummary sets the osVersionsSummary property value. Count of devices with malware per windows OS version
func (m *WindowsMalwareOverview) SetOsVersionsSummary(value []OsVersionCountable)() {
    m.osVersionsSummary = value
}
// SetTotalDistinctMalwareCount sets the totalDistinctMalwareCount property value. Count of all distinct malwares detected across all devices. Valid values -2147483648 to 2147483647
func (m *WindowsMalwareOverview) SetTotalDistinctMalwareCount(value *int32)() {
    m.totalDistinctMalwareCount = value
}
// SetTotalMalwareCount sets the totalMalwareCount property value. Count of all malware detections across all devices. Valid values -2147483648 to 2147483647
func (m *WindowsMalwareOverview) SetTotalMalwareCount(value *int32)() {
    m.totalMalwareCount = value
}
