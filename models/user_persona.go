// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type UserPersona int

const (
    UNKNOWN_USERPERSONA UserPersona = iota
    EXTERNALMEMBER_USERPERSONA
    EXTERNALGUEST_USERPERSONA
    INTERNALMEMBER_USERPERSONA
    INTERNALGUEST_USERPERSONA
    UNKNOWNFUTUREVALUE_USERPERSONA
)

func (i UserPersona) String() string {
    return []string{"unknown", "externalMember", "externalGuest", "internalMember", "internalGuest", "unknownFutureValue"}[i]
}
func ParseUserPersona(v string) (any, error) {
    result := UNKNOWN_USERPERSONA
    switch v {
        case "unknown":
            result = UNKNOWN_USERPERSONA
        case "externalMember":
            result = EXTERNALMEMBER_USERPERSONA
        case "externalGuest":
            result = EXTERNALGUEST_USERPERSONA
        case "internalMember":
            result = INTERNALMEMBER_USERPERSONA
        case "internalGuest":
            result = INTERNALGUEST_USERPERSONA
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_USERPERSONA
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeUserPersona(values []UserPersona) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i UserPersona) isMultiValue() bool {
    return false
}
