// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type CloudPcPolicyTimezone int

const (
    GMT_CLOUDPCPOLICYTIMEZONE CloudPcPolicyTimezone = iota
    BIT_CLOUDPCPOLICYTIMEZONE
    NUT_CLOUDPCPOLICYTIMEZONE
    HST_CLOUDPCPOLICYTIMEZONE
    MIT_CLOUDPCPOLICYTIMEZONE
    AKST_CLOUDPCPOLICYTIMEZONE
    PST_CLOUDPCPOLICYTIMEZONE
    MST_CLOUDPCPOLICYTIMEZONE
    EAST_CLOUDPCPOLICYTIMEZONE
    EST_CLOUDPCPOLICYTIMEZONE
    AST_CLOUDPCPOLICYTIMEZONE
    NST_CLOUDPCPOLICYTIMEZONE
    ART_CLOUDPCPOLICYTIMEZONE
    GST_CLOUDPCPOLICYTIMEZONE
    AZOT_CLOUDPCPOLICYTIMEZONE
    CET_CLOUDPCPOLICYTIMEZONE
    CAT_CLOUDPCPOLICYTIMEZONE
    EAT_CLOUDPCPOLICYTIMEZONE
    GET_CLOUDPCPOLICYTIMEZONE
    PKT_CLOUDPCPOLICYTIMEZONE
    IST_CLOUDPCPOLICYTIMEZONE
    BST_CLOUDPCPOLICYTIMEZONE
    THA_CLOUDPCPOLICYTIMEZONE
    CST_CLOUDPCPOLICYTIMEZONE
    JST_CLOUDPCPOLICYTIMEZONE
    ACST_CLOUDPCPOLICYTIMEZONE
    PGT_CLOUDPCPOLICYTIMEZONE
    SBT_CLOUDPCPOLICYTIMEZONE
    FJT_CLOUDPCPOLICYTIMEZONE
    TOT_CLOUDPCPOLICYTIMEZONE
    LINT_CLOUDPCPOLICYTIMEZONE
    UNKNOWNFUTUREVALUE_CLOUDPCPOLICYTIMEZONE
)

func (i CloudPcPolicyTimezone) String() string {
    return []string{"gmt", "bit", "nut", "hst", "mit", "akst", "pst", "mst", "east", "est", "ast", "nst", "art", "gst", "azot", "cet", "cat", "eat", "get", "pkt", "ist", "bst", "tha", "cst", "jst", "acst", "pgt", "sbt", "fjt", "tot", "lint", "unknownFutureValue"}[i]
}
func ParseCloudPcPolicyTimezone(v string) (any, error) {
    result := GMT_CLOUDPCPOLICYTIMEZONE
    switch v {
        case "gmt":
            result = GMT_CLOUDPCPOLICYTIMEZONE
        case "bit":
            result = BIT_CLOUDPCPOLICYTIMEZONE
        case "nut":
            result = NUT_CLOUDPCPOLICYTIMEZONE
        case "hst":
            result = HST_CLOUDPCPOLICYTIMEZONE
        case "mit":
            result = MIT_CLOUDPCPOLICYTIMEZONE
        case "akst":
            result = AKST_CLOUDPCPOLICYTIMEZONE
        case "pst":
            result = PST_CLOUDPCPOLICYTIMEZONE
        case "mst":
            result = MST_CLOUDPCPOLICYTIMEZONE
        case "east":
            result = EAST_CLOUDPCPOLICYTIMEZONE
        case "est":
            result = EST_CLOUDPCPOLICYTIMEZONE
        case "ast":
            result = AST_CLOUDPCPOLICYTIMEZONE
        case "nst":
            result = NST_CLOUDPCPOLICYTIMEZONE
        case "art":
            result = ART_CLOUDPCPOLICYTIMEZONE
        case "gst":
            result = GST_CLOUDPCPOLICYTIMEZONE
        case "azot":
            result = AZOT_CLOUDPCPOLICYTIMEZONE
        case "cet":
            result = CET_CLOUDPCPOLICYTIMEZONE
        case "cat":
            result = CAT_CLOUDPCPOLICYTIMEZONE
        case "eat":
            result = EAT_CLOUDPCPOLICYTIMEZONE
        case "get":
            result = GET_CLOUDPCPOLICYTIMEZONE
        case "pkt":
            result = PKT_CLOUDPCPOLICYTIMEZONE
        case "ist":
            result = IST_CLOUDPCPOLICYTIMEZONE
        case "bst":
            result = BST_CLOUDPCPOLICYTIMEZONE
        case "tha":
            result = THA_CLOUDPCPOLICYTIMEZONE
        case "cst":
            result = CST_CLOUDPCPOLICYTIMEZONE
        case "jst":
            result = JST_CLOUDPCPOLICYTIMEZONE
        case "acst":
            result = ACST_CLOUDPCPOLICYTIMEZONE
        case "pgt":
            result = PGT_CLOUDPCPOLICYTIMEZONE
        case "sbt":
            result = SBT_CLOUDPCPOLICYTIMEZONE
        case "fjt":
            result = FJT_CLOUDPCPOLICYTIMEZONE
        case "tot":
            result = TOT_CLOUDPCPOLICYTIMEZONE
        case "lint":
            result = LINT_CLOUDPCPOLICYTIMEZONE
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_CLOUDPCPOLICYTIMEZONE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeCloudPcPolicyTimezone(values []CloudPcPolicyTimezone) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i CloudPcPolicyTimezone) isMultiValue() bool {
    return false
}
