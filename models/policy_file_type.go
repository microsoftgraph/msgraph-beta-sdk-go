// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type PolicyFileType int

const (
    DLPPOLICY_POLICYFILETYPE PolicyFileType = iota
    DLPSENSITIVEINFORMATIONTYPE_POLICYFILETYPE
    DATACOLLECTIONPOLICY_POLICYFILETYPE
    UNKNOWNFUTUREVALUE_POLICYFILETYPE
)

func (i PolicyFileType) String() string {
    return []string{"dlpPolicy", "dlpSensitiveInformationType", "dataCollectionPolicy", "unknownFutureValue"}[i]
}
func ParsePolicyFileType(v string) (any, error) {
    result := DLPPOLICY_POLICYFILETYPE
    switch v {
        case "dlpPolicy":
            result = DLPPOLICY_POLICYFILETYPE
        case "dlpSensitiveInformationType":
            result = DLPSENSITIVEINFORMATIONTYPE_POLICYFILETYPE
        case "dataCollectionPolicy":
            result = DATACOLLECTIONPOLICY_POLICYFILETYPE
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_POLICYFILETYPE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializePolicyFileType(values []PolicyFileType) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i PolicyFileType) isMultiValue() bool {
    return false
}
