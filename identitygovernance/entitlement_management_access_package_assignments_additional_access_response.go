package identitygovernance

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

// EntitlementManagementAccessPackageAssignmentsAdditionalAccessResponse 
// Deprecated: This class is obsolete. Use additionalAccessGetResponse instead.
type EntitlementManagementAccessPackageAssignmentsAdditionalAccessResponse struct {
    EntitlementManagementAccessPackageAssignmentsAdditionalAccessGetResponse
}
// NewEntitlementManagementAccessPackageAssignmentsAdditionalAccessResponse instantiates a new EntitlementManagementAccessPackageAssignmentsAdditionalAccessResponse and sets the default values.
func NewEntitlementManagementAccessPackageAssignmentsAdditionalAccessResponse()(*EntitlementManagementAccessPackageAssignmentsAdditionalAccessResponse) {
    m := &EntitlementManagementAccessPackageAssignmentsAdditionalAccessResponse{
        EntitlementManagementAccessPackageAssignmentsAdditionalAccessGetResponse: *NewEntitlementManagementAccessPackageAssignmentsAdditionalAccessGetResponse(),
    }
    return m
}
// CreateEntitlementManagementAccessPackageAssignmentsAdditionalAccessResponseFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
func CreateEntitlementManagementAccessPackageAssignmentsAdditionalAccessResponseFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewEntitlementManagementAccessPackageAssignmentsAdditionalAccessResponse(), nil
}
// EntitlementManagementAccessPackageAssignmentsAdditionalAccessResponseable 
// Deprecated: This class is obsolete. Use additionalAccessGetResponse instead.
type EntitlementManagementAccessPackageAssignmentsAdditionalAccessResponseable interface {
    EntitlementManagementAccessPackageAssignmentsAdditionalAccessGetResponseable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
}
