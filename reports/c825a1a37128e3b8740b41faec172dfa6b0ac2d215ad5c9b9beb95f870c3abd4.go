// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package reports

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be "github.com/microsoftgraph/msgraph-beta-sdk-go/models"
    i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459 "github.com/microsoftgraph/msgraph-beta-sdk-go/models/odataerrors"
)

// AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder provides operations to manage the userPasswordResetsAndChangesSummary property of the microsoft.graph.authenticationMethodsRoot entity.
type AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderDeleteRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderDeleteRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderGetQueryParameters represents the summary of password resets and changes for a specific day. This includes the number of password resets that were self-service and those triggered by an administrator.
type AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderGetQueryParameters struct {
    // Expand related entities
    Expand []string `uriparametername:"%24expand"`
    // Select properties to be returned
    Select []string `uriparametername:"%24select"`
}
// AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
    // Request query parameters
    QueryParameters *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderGetQueryParameters
}
// AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderPatchRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderPatchRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// NewAuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderInternal instantiates a new AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder and sets the default values.
func NewAuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) {
    m := &AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/reports/authenticationMethods/userPasswordResetsAndChangesSummary/{userPasswordResetsAndChangesSummary%2Did}{?%24expand,%24select}", pathParameters),
    }
    return m
}
// NewAuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder instantiates a new AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder and sets the default values.
func NewAuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewAuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderInternal(urlParams, requestAdapter)
}
// Delete delete navigation property userPasswordResetsAndChangesSummary for reports
// returns a ODataError error when the service returns a 4XX or 5XX status code
func (m *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) Delete(ctx context.Context, requestConfiguration *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderDeleteRequestConfiguration)(error) {
    requestInfo, err := m.ToDeleteRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459.CreateODataErrorFromDiscriminatorValue,
    }
    err = m.BaseRequestBuilder.RequestAdapter.SendNoContent(ctx, requestInfo, errorMapping)
    if err != nil {
        return err
    }
    return nil
}
// Get represents the summary of password resets and changes for a specific day. This includes the number of password resets that were self-service and those triggered by an administrator.
// returns a UserPasswordResetsAndChangesSummaryable when successful
// returns a ODataError error when the service returns a 4XX or 5XX status code
func (m *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) Get(ctx context.Context, requestConfiguration *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderGetRequestConfiguration)(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.UserPasswordResetsAndChangesSummaryable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459.CreateODataErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.CreateUserPasswordResetsAndChangesSummaryFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.UserPasswordResetsAndChangesSummaryable), nil
}
// Patch update the navigation property userPasswordResetsAndChangesSummary in reports
// returns a UserPasswordResetsAndChangesSummaryable when successful
// returns a ODataError error when the service returns a 4XX or 5XX status code
func (m *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) Patch(ctx context.Context, body ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.UserPasswordResetsAndChangesSummaryable, requestConfiguration *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderPatchRequestConfiguration)(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.UserPasswordResetsAndChangesSummaryable, error) {
    requestInfo, err := m.ToPatchRequestInformation(ctx, body, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459.CreateODataErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.CreateUserPasswordResetsAndChangesSummaryFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.UserPasswordResetsAndChangesSummaryable), nil
}
// ToDeleteRequestInformation delete navigation property userPasswordResetsAndChangesSummary for reports
// returns a *RequestInformation when successful
func (m *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) ToDeleteRequestInformation(ctx context.Context, requestConfiguration *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderDeleteRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.DELETE, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// ToGetRequestInformation represents the summary of password resets and changes for a specific day. This includes the number of password resets that were self-service and those triggered by an administrator.
// returns a *RequestInformation when successful
func (m *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        if requestConfiguration.QueryParameters != nil {
            requestInfo.AddQueryParameters(*(requestConfiguration.QueryParameters))
        }
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// ToPatchRequestInformation update the navigation property userPasswordResetsAndChangesSummary in reports
// returns a *RequestInformation when successful
func (m *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) ToPatchRequestInformation(ctx context.Context, body ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.UserPasswordResetsAndChangesSummaryable, requestConfiguration *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilderPatchRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.PATCH, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    err := requestInfo.SetContentFromParsable(ctx, m.BaseRequestBuilder.RequestAdapter, "application/json", body)
    if err != nil {
        return nil, err
    }
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder when successful
func (m *AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) WithUrl(rawUrl string)(*AuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder) {
    return NewAuthenticationMethodsUserPasswordResetsAndChangesSummaryUserPasswordResetsAndChangesSummaryItemRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
