// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package drives

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
    i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459 "github.com/microsoftgraph/msgraph-beta-sdk-go/models/odataerrors"
)

// ItemListSubscriptionsGetVapidPublicKeyRequestBuilder provides operations to call the getVapidPublicKey method.
type ItemListSubscriptionsGetVapidPublicKeyRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// ItemListSubscriptionsGetVapidPublicKeyRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type ItemListSubscriptionsGetVapidPublicKeyRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// NewItemListSubscriptionsGetVapidPublicKeyRequestBuilderInternal instantiates a new ItemListSubscriptionsGetVapidPublicKeyRequestBuilder and sets the default values.
func NewItemListSubscriptionsGetVapidPublicKeyRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*ItemListSubscriptionsGetVapidPublicKeyRequestBuilder) {
    m := &ItemListSubscriptionsGetVapidPublicKeyRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/drives/{drive%2Did}/list/subscriptions/getVapidPublicKey()", pathParameters),
    }
    return m
}
// NewItemListSubscriptionsGetVapidPublicKeyRequestBuilder instantiates a new ItemListSubscriptionsGetVapidPublicKeyRequestBuilder and sets the default values.
func NewItemListSubscriptionsGetVapidPublicKeyRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*ItemListSubscriptionsGetVapidPublicKeyRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewItemListSubscriptionsGetVapidPublicKeyRequestBuilderInternal(urlParams, requestAdapter)
}
// Get get the public key information required to validate push notifications according to RFC 8292 specifications.
// Deprecated: This method is obsolete. Use GetAsGetVapidPublicKeyGetResponse instead.
// returns a ItemListSubscriptionsGetVapidPublicKeyResponseable when successful
// returns a ODataError error when the service returns a 4XX or 5XX status code
// [Find more info here]
// 
// [Find more info here]: https://learn.microsoft.com/graph/api/subscription-getvapidpublickey?view=graph-rest-beta
func (m *ItemListSubscriptionsGetVapidPublicKeyRequestBuilder) Get(ctx context.Context, requestConfiguration *ItemListSubscriptionsGetVapidPublicKeyRequestBuilderGetRequestConfiguration)(ItemListSubscriptionsGetVapidPublicKeyResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459.CreateODataErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateItemListSubscriptionsGetVapidPublicKeyResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ItemListSubscriptionsGetVapidPublicKeyResponseable), nil
}
// GetAsGetVapidPublicKeyGetResponse get the public key information required to validate push notifications according to RFC 8292 specifications.
// returns a ItemListSubscriptionsGetVapidPublicKeyGetResponseable when successful
// returns a ODataError error when the service returns a 4XX or 5XX status code
// [Find more info here]
// 
// [Find more info here]: https://learn.microsoft.com/graph/api/subscription-getvapidpublickey?view=graph-rest-beta
func (m *ItemListSubscriptionsGetVapidPublicKeyRequestBuilder) GetAsGetVapidPublicKeyGetResponse(ctx context.Context, requestConfiguration *ItemListSubscriptionsGetVapidPublicKeyRequestBuilderGetRequestConfiguration)(ItemListSubscriptionsGetVapidPublicKeyGetResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459.CreateODataErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateItemListSubscriptionsGetVapidPublicKeyGetResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ItemListSubscriptionsGetVapidPublicKeyGetResponseable), nil
}
// ToGetRequestInformation get the public key information required to validate push notifications according to RFC 8292 specifications.
// returns a *RequestInformation when successful
func (m *ItemListSubscriptionsGetVapidPublicKeyRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *ItemListSubscriptionsGetVapidPublicKeyRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *ItemListSubscriptionsGetVapidPublicKeyRequestBuilder when successful
func (m *ItemListSubscriptionsGetVapidPublicKeyRequestBuilder) WithUrl(rawUrl string)(*ItemListSubscriptionsGetVapidPublicKeyRequestBuilder) {
    return NewItemListSubscriptionsGetVapidPublicKeyRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
