// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package admin

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
    ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be "github.com/microsoftgraph/msgraph-beta-sdk-go/models"
    i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459 "github.com/microsoftgraph/msgraph-beta-sdk-go/models/odataerrors"
)

// ConfigurationManagementRequestBuilder provides operations to manage the configurationManagement property of the microsoft.graph.admin entity.
type ConfigurationManagementRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// ConfigurationManagementRequestBuilderDeleteRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type ConfigurationManagementRequestBuilderDeleteRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// ConfigurationManagementRequestBuilderGetQueryParameters get configurationManagement from admin
type ConfigurationManagementRequestBuilderGetQueryParameters struct {
    // Expand related entities
    Expand []string `uriparametername:"%24expand"`
    // Select properties to be returned
    Select []string `uriparametername:"%24select"`
}
// ConfigurationManagementRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type ConfigurationManagementRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
    // Request query parameters
    QueryParameters *ConfigurationManagementRequestBuilderGetQueryParameters
}
// ConfigurationManagementRequestBuilderPatchRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type ConfigurationManagementRequestBuilderPatchRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// ConfigurationApplications provides operations to manage the configurationApplications property of the microsoft.graph.configurationManagement entity.
// returns a *ConfigurationManagementConfigurationApplicationsRequestBuilder when successful
func (m *ConfigurationManagementRequestBuilder) ConfigurationApplications()(*ConfigurationManagementConfigurationApplicationsRequestBuilder) {
    return NewConfigurationManagementConfigurationApplicationsRequestBuilderInternal(m.BaseRequestBuilder.PathParameters, m.BaseRequestBuilder.RequestAdapter)
}
// ConfigurationDrifts provides operations to manage the configurationDrifts property of the microsoft.graph.configurationManagement entity.
// returns a *ConfigurationManagementConfigurationDriftsRequestBuilder when successful
func (m *ConfigurationManagementRequestBuilder) ConfigurationDrifts()(*ConfigurationManagementConfigurationDriftsRequestBuilder) {
    return NewConfigurationManagementConfigurationDriftsRequestBuilderInternal(m.BaseRequestBuilder.PathParameters, m.BaseRequestBuilder.RequestAdapter)
}
// ConfigurationMonitoringResults provides operations to manage the configurationMonitoringResults property of the microsoft.graph.configurationManagement entity.
// returns a *ConfigurationManagementConfigurationMonitoringResultsRequestBuilder when successful
func (m *ConfigurationManagementRequestBuilder) ConfigurationMonitoringResults()(*ConfigurationManagementConfigurationMonitoringResultsRequestBuilder) {
    return NewConfigurationManagementConfigurationMonitoringResultsRequestBuilderInternal(m.BaseRequestBuilder.PathParameters, m.BaseRequestBuilder.RequestAdapter)
}
// ConfigurationMonitors provides operations to manage the configurationMonitors property of the microsoft.graph.configurationManagement entity.
// returns a *ConfigurationManagementConfigurationMonitorsRequestBuilder when successful
func (m *ConfigurationManagementRequestBuilder) ConfigurationMonitors()(*ConfigurationManagementConfigurationMonitorsRequestBuilder) {
    return NewConfigurationManagementConfigurationMonitorsRequestBuilderInternal(m.BaseRequestBuilder.PathParameters, m.BaseRequestBuilder.RequestAdapter)
}
// ConfigurationSnapshotJobs provides operations to manage the configurationSnapshotJobs property of the microsoft.graph.configurationManagement entity.
// returns a *ConfigurationManagementConfigurationSnapshotJobsRequestBuilder when successful
func (m *ConfigurationManagementRequestBuilder) ConfigurationSnapshotJobs()(*ConfigurationManagementConfigurationSnapshotJobsRequestBuilder) {
    return NewConfigurationManagementConfigurationSnapshotJobsRequestBuilderInternal(m.BaseRequestBuilder.PathParameters, m.BaseRequestBuilder.RequestAdapter)
}
// ConfigurationSnapshots provides operations to manage the configurationSnapshots property of the microsoft.graph.configurationManagement entity.
// returns a *ConfigurationManagementConfigurationSnapshotsRequestBuilder when successful
func (m *ConfigurationManagementRequestBuilder) ConfigurationSnapshots()(*ConfigurationManagementConfigurationSnapshotsRequestBuilder) {
    return NewConfigurationManagementConfigurationSnapshotsRequestBuilderInternal(m.BaseRequestBuilder.PathParameters, m.BaseRequestBuilder.RequestAdapter)
}
// NewConfigurationManagementRequestBuilderInternal instantiates a new ConfigurationManagementRequestBuilder and sets the default values.
func NewConfigurationManagementRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*ConfigurationManagementRequestBuilder) {
    m := &ConfigurationManagementRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/admin/configurationManagement{?%24expand,%24select}", pathParameters),
    }
    return m
}
// NewConfigurationManagementRequestBuilder instantiates a new ConfigurationManagementRequestBuilder and sets the default values.
func NewConfigurationManagementRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*ConfigurationManagementRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewConfigurationManagementRequestBuilderInternal(urlParams, requestAdapter)
}
// Delete delete navigation property configurationManagement for admin
// returns a ODataError error when the service returns a 4XX or 5XX status code
func (m *ConfigurationManagementRequestBuilder) Delete(ctx context.Context, requestConfiguration *ConfigurationManagementRequestBuilderDeleteRequestConfiguration)(error) {
    requestInfo, err := m.ToDeleteRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459.CreateODataErrorFromDiscriminatorValue,
    }
    err = m.BaseRequestBuilder.RequestAdapter.SendNoContent(ctx, requestInfo, errorMapping)
    if err != nil {
        return err
    }
    return nil
}
// Get get configurationManagement from admin
// returns a ConfigurationManagementable when successful
// returns a ODataError error when the service returns a 4XX or 5XX status code
func (m *ConfigurationManagementRequestBuilder) Get(ctx context.Context, requestConfiguration *ConfigurationManagementRequestBuilderGetRequestConfiguration)(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.ConfigurationManagementable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459.CreateODataErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.CreateConfigurationManagementFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.ConfigurationManagementable), nil
}
// Patch update the navigation property configurationManagement in admin
// returns a ConfigurationManagementable when successful
// returns a ODataError error when the service returns a 4XX or 5XX status code
func (m *ConfigurationManagementRequestBuilder) Patch(ctx context.Context, body ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.ConfigurationManagementable, requestConfiguration *ConfigurationManagementRequestBuilderPatchRequestConfiguration)(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.ConfigurationManagementable, error) {
    requestInfo, err := m.ToPatchRequestInformation(ctx, body, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": i20a3050780ee0b0cde0a884a4f35429a20d60067e3bcda382ec5400079147459.CreateODataErrorFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.CreateConfigurationManagementFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.ConfigurationManagementable), nil
}
// ToDeleteRequestInformation delete navigation property configurationManagement for admin
// returns a *RequestInformation when successful
func (m *ConfigurationManagementRequestBuilder) ToDeleteRequestInformation(ctx context.Context, requestConfiguration *ConfigurationManagementRequestBuilderDeleteRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.DELETE, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// ToGetRequestInformation get configurationManagement from admin
// returns a *RequestInformation when successful
func (m *ConfigurationManagementRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *ConfigurationManagementRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        if requestConfiguration.QueryParameters != nil {
            requestInfo.AddQueryParameters(*(requestConfiguration.QueryParameters))
        }
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    return requestInfo, nil
}
// ToPatchRequestInformation update the navigation property configurationManagement in admin
// returns a *RequestInformation when successful
func (m *ConfigurationManagementRequestBuilder) ToPatchRequestInformation(ctx context.Context, body ie233ee762e29b4ba6970aa2a2efce4b7fde11697ca9ea81099d0f8269309c1be.ConfigurationManagementable, requestConfiguration *ConfigurationManagementRequestBuilderPatchRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.PATCH, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/json")
    err := requestInfo.SetContentFromParsable(ctx, m.BaseRequestBuilder.RequestAdapter, "application/json", body)
    if err != nil {
        return nil, err
    }
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *ConfigurationManagementRequestBuilder when successful
func (m *ConfigurationManagementRequestBuilder) WithUrl(rawUrl string)(*ConfigurationManagementRequestBuilder) {
    return NewConfigurationManagementRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
