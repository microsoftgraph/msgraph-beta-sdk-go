package solutions

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

// Deprecated: This class is obsolete. Use VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleGetResponseable instead.
type VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponse struct {
    VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleGetResponse
}
// NewVirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponse instantiates a new VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponse and sets the default values.
func NewVirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponse()(*VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponse) {
    m := &VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponse{
        VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleGetResponse: *NewVirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleGetResponse(),
    }
    return m
}
// CreateVirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponseFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateVirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponseFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewVirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponse(), nil
}
// Deprecated: This class is obsolete. Use VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleGetResponseable instead.
type VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleResponseable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    VirtualeventsTownhallsGetbyuserrolewithroleGetByUserRoleWithRoleGetResponseable
}
